import{_ as t,c as p,o as _,a4 as e}from"./chunks/framework.uKVmtqZI.js";const f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"读书分享专区/树洞倾述区/一封絮絮叨叨的信.md","filePath":"读书分享专区/树洞倾述区/一封絮絮叨叨的信.md"}'),a={name:"读书分享专区/树洞倾述区/一封絮絮叨叨的信.md"},o=e('<p>XXX，</p><p>借着这次周报的机会，多说一些关于这次治超OIM2.3基线产品开发工作的一些事情，讲一些看似风平浪静、有条不紊开发工作的背后故事，以及我对现在我们产品或者团队的一些看法或者疑问。</p><p>这次基线开始之初，你应该找我谈过一次话，关于我的岗级上升之后，以后工作的划分以及角色定位问题，最后希望我能稍微摆脱一些代码层面的东西，承接一些产品设计或者项目对接的工作。所以当时我一心想着用高效和快速的方式去完成这个治超基线的开发工作，然后承接TOCC的事情，承担更多我这个岗级应该承担的责任。因为之前或多或少吐槽过已有产品的代码质量，而本身基线的代码质量大家其实也都是心知肚明。所以这次自己真的太想尽自己所能把治超这个产品做的好一些，决定做代码重构，一些模块的优化设计，加了尽可能通俗易懂的注释，这一切并不是我想证明自己代码多牛逼的虚荣心在作祟，而是真真切切的希望从这个2.3版本开始，以后的开发能从这个版本代码里面看到一种想要变好的态度和决心。</p><p>之后正式开发之后，一方面负责完成着自己的模块，另外一方面在重构一些老代码，想着功能尽量做得通用和完善。在此期间，除了Y工时不时把一些代码注释掉，事后一问三不知；或者为了一个函数，动不动拷贝几十个类添加一堆依赖，我提醒他如果改了，我也没有觉得有什么。而且我觉得我们是一个团队，他犯一些初级的错误，我也有义务去提醒他和帮助他改进。但是一直到第一轮提测前，他依然在犯着这些显而易见的错误。</p><p>没有记错的话，一轮提测就是我和H工两个人大周的周六来加班帮他改完几个功能阻塞缺陷，才保证了产品的顺利提测。经过几个版本匆忙的迭代，提测后缺陷的数量是可想而知的，在修复缺陷的过程中，Y工的问题变得更加明显，做的每一个功能几乎都很“脆弱”，很多写的缺陷处于自己无法排查解决的境地。期间一面修改着自己负责模块的缺陷和两个组件的开源合规性问题，一方面时不时H工会@我，让帮他排查解决缺陷问题。当然我还是抱着我们是一个团队，有必要互帮互助的心态在尽力帮助。最让人难受的是，在这个时候，他依然犯着各种莫名其妙地注释掉代码，疯狂拷贝堆叠各种逻辑，错误的代码提交导致项目无法启动这些问题。而因此引发问题之后，你去问他，得到的答复永远是：“忘了”，“好的”，“回头再看看吧”。这也是让我和H工心态慢慢开始崩溃的起点，自己的负面情绪也开始不断累积，变得像一个买菜大妈一样容易抱怨周遭的事情。</p><p>所以二轮提测前（端午前一天），我验证完自己所有缺陷和功能模块没有问题之后，那天很早就下班了。我记得特别清楚，那天在回家的地铁上，H工发我消息，问我是不是下班了，Y工开发的某某功能又报错了。我有种身体被掏空的的无力感，也感同身受H工那时那刻的处境和无奈，当时回复H工的原话大致是：“二轮提测后要不和领导说，让他忙其他项目去吧，后端缺陷全部给我，不然这样子大家都很累”。我不确定H工最后有没有和您传达过这个信息（但在我这没有给过我任何yes或者no的答复，我也不确定是他的意思还是您的意思），然后应该是端午那天，H工和Y工来加班保证了二轮的顺利提测。我承认这次自己有了情绪，没有继续一起来打包提测，显得特别没有团队精神和责任心，我也为此内疚了很久。</p><p>之后二轮的缺陷里面，H工直接和我商量把Y工一些复杂有难度的缺陷转给我去修复（H工其实也在帮忙同步改一些Y工的简单问题缺陷），为了产品的进度，或者说和H工三四年的同事关系，我很难说“不”去拒绝。但是看完那些缺陷的代码逻辑，说真的我内心其实特别抗拒，但抱着二轮提测的内疚感和想着尽快结束这些的心态，还是隐忍着主动承接着重写改完了这些。我相信H工和我一样，虽然心态很崩溃，但还抱有侥幸心理，相信这次Y工能够把自己负责为数不多的功能和缺陷解决好。三轮打包提测那晚，因为他一个代码注释引发的缺陷问题，三四个人陪着打包验证到十一点多，你问他当时为什么注释掉那些逻辑，得到的依旧是轻描淡写的答复：“忘了”，“我现在改好不就得了”。那一刻自己真的太想爆发了，还有一种特别绝望的心情。</p><p>结果就是三轮提测后，直接因为中级缺陷问题太多，导致加测一轮。昨天例会上，H工表示这些缺陷都是一些小问题，能够很方便的修改，然后又打招呼让我帮忙改下缺陷。我开始慢慢如梦初醒，对于技术而言，这些确实只是小问题；但是对于这次产品的开发工作而言，不再觉得这是一些小问题。看着Y工十几个缺陷，我也不再有信心我们一天内能改好这些问题。最后我还是答应H工修复一个阈值导致的所有缺陷，不过真的希望这是最后一次兜底了。在我的观念里，团队间必要的互帮互助是需要的以及可理解的，但绝不是无限的给人兜底和宽容，如果工作基本全靠帮扶，一旦产生了依赖，无论是对团队还是个人的成长，都将会是弊大于利吧。</p><p>因为这些，我承认自己积累了特别多负面情绪，心态也变得很差（当然之后我一定会慢慢调整好自己的心态）。但我说这些的本意不是为了传播负面能量和抱怨工作，或者凸显说我付出了多少多少，做了什么牛逼的事情，或者逃避产品加测一轮带来的责任，而且有必要说明更不是为了攻击某些同事。只是希望您从我的言语间，可能有点片面，但或多或少能了解到一些目前我们产品开发的现状。然后透过这次产品的开发工作，了解到可能存在的一些问题：团队内一些同事技术层面相对薄弱这是客观存在的事实，但是对于工作态度，责任心以及是不是用心去做事的问题，我们有没有措施去帮助改进或者解决呢？我们的产品一次次的迭代开发，为了加速抢占市场的同时，假如功能或者性能没有变得更出色，那么它的核心竞争力又是什么呢？关于一些重点项目和基线产品，如何将有限的资源更加合理的进行人员划分和分工，让合适的人去做合适的事？</p><p>其实犹豫纠结了很久，最后才决定说这些，包括自己在代码上做出的微不足道努力，初衷都是为了我们产品能够变的更好一点，希望我们的团队可以更加健康的成长和发展，我们的产品也能够因为品质的提升，收获更多的业绩。</p><p>最后的最后，真的特别抱歉，占用了你为数不多的休息时间，感谢听我絮絮叨叨的说完这些。</p><p>祝安，万事如意！</p><div style="text-align:right;"><br> 一个絮絮叨叨的人<br><br> 六月 18,2022 </div>',13),r=[o];function s(n,c,i,d,H,l){return _(),p("div",null,r)}const Y=t(a,[["render",s]]);export{f as __pageData,Y as default};
