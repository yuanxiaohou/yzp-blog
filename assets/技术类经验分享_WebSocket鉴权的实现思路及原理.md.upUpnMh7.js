import{_ as s,c as i,o as a,a4 as n}from"./chunks/framework.CUMjAKNJ.js";const h="/yzp-blog/assets/%E7%B1%BB%E4%BE%9D%E8%B5%96%E5%85%B3%E7%B3%BB%E8%AE%BE%E8%AE%A1.D28d6Vw2.png",k="/yzp-blog/assets/%E6%95%B0%E6%8D%AE%E4%BA%A4%E4%BA%92%E6%97%B6%E5%BA%8F%E8%AE%BE%E8%AE%A1.CRAfMk4M.png",t="/yzp-blog/assets/%E9%89%B4%E6%9D%83%E8%AE%BE%E8%AE%A1.FWH-MomS.png",l="/yzp-blog/assets/%E9%89%B4%E6%9D%83%E5%A4%B1%E8%B4%A5.DiG_XUdf.png",p="/yzp-blog/assets/%E9%97%A8%E6%88%B7%E8%8E%B7%E5%8F%96Cookie.BsQjSNYr.png",e="/yzp-blog/assets/%E9%89%B4%E6%9D%83%E6%88%90%E5%8A%9F.DjQEskaB.png",u=JSON.parse('{"title":"WebSocket鉴权的实现思路及原理","description":"","frontmatter":{},"headers":[],"relativePath":"技术类经验分享/WebSocket鉴权的实现思路及原理.md","filePath":"技术类经验分享/WebSocket鉴权的实现思路及原理.md"}'),E={name:"技术类经验分享/WebSocket鉴权的实现思路及原理.md"},r=n('<h1 id="websocket鉴权的实现思路及原理" tabindex="-1">WebSocket鉴权的实现思路及原理 <a class="header-anchor" href="#websocket鉴权的实现思路及原理" aria-label="Permalink to &quot;WebSocket鉴权的实现思路及原理&quot;">​</a></h1><h2 id="🌴背景简介" tabindex="-1">🌴背景简介 <a class="header-anchor" href="#🌴背景简介" aria-label="Permalink to &quot;🌴背景简介&quot;">​</a></h2><p>“综合执法”基线的开发中使用了<code>WebSocket</code>，本来想借着这次的开发经验详细的说下WebSocket相关的基础知识及项目实战。但是我在RDKnown上搜索之后发现已经有很多类似相关的文章，并且其中有部分写的很好、很详细。所以就打消了我分享WebSocket基础概念及项目集成相关东西的念头。</p><p>但是大概翻看了一遍发现，这么多的分享中，愣是没有一篇有涉及鉴权相关的知识。 那么就给WebSocket“查漏补缺”，分享一下JWT鉴权<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>相关的实现思路和原理吧，于此同时也会稍微展开讲下对于WebSocket的简单封装思路。</p><h3 id="基础环境信息" tabindex="-1">基础环境信息 <a class="header-anchor" href="#基础环境信息" aria-label="Permalink to &quot;基础环境信息&quot;">​</a></h3><p>在开始讲鉴权之前，有必要大概说下对于Java开发者而言，目前后台WebSocket服务端的开发的几种常用选择：</p><ul><li><em>基于web容器的websocket-api协议，比如undertow-websockets</em></li><li><em>Spring4 以后开始内置支持 WebSocket</em></li><li><em>Netty3 以后支持开发 WebSocket，比如Netty-SocketIO<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></em></li></ul><p>而本文是基于websocket-api实现的WebSocket，具体依赖关系如下：</p><blockquote><p>spring-boot-starter-websocket：2.6.11</p><p>javax.websocket-api：1.1</p><p>undertow-websockets-jsr：2.2.19.Final</p><p>aries-jc-jwt：3.1.4.RELEASE</p></blockquote><h2 id="🌵实现思路" tabindex="-1">🌵实现思路 <a class="header-anchor" href="#🌵实现思路" aria-label="Permalink to &quot;🌵实现思路&quot;">​</a></h2><h3 id="类依赖关系设计" tabindex="-1">类依赖关系设计 <a class="header-anchor" href="#类依赖关系设计" aria-label="Permalink to &quot;类依赖关系设计&quot;">​</a></h3><p><img src="'+h+'" alt="类依赖关系设计"></p><p>通过<code>WebSocketServerAutoConfiguration</code>自动配置类构造<code>ServerEndpointExporter</code>，用来扫描注入带<code>@ServerEndpoint</code>注解的消息处理类。</p><p><code>AbstractSocketMessageHandler</code>事件处理抽象类，内部默认实现了<code>@OnOpen</code>建立连接，<code>@OnClose</code>关闭连接，<code>@OnError</code>异常处理，<code>@OnMessage</code>消息接收等等基础WebSocket服务，这样一来在业务处理层就不需要重复实现这些基本通用的逻辑，并给封装了<code>subscribeCallback</code>订阅回调，<code>isAuthorized</code><strong>鉴权校验</strong>，<code>handler</code>消息定向发送等等函数，规范消息处理的逻辑及提供一些通用的方法。</p><p>为了更好的为业务处理类服务，继续抽取一层<code>AbstractBusinessMessageHandler</code>，封装业务相关的返回对象结构体，<strong>jwt鉴权</strong>，订阅数据校验等等逻辑，以保证<code>AbstractSocketMessageHandler</code>的&quot;纯洁&quot;，所以最终业务消息处理类继承自<code>AbstractBusinessMessageHandler</code>。</p><h3 id="数据交互时序设计" tabindex="-1">数据交互时序设计 <a class="header-anchor" href="#数据交互时序设计" aria-label="Permalink to &quot;数据交互时序设计&quot;">​</a></h3><p><img src="'+k+'" alt="数据交互时序设计"></p><p>WebSocket服务数据交互的生成周期主要包括：建立连接<sup>@OnOpen</sup>（关闭连接<sup>@OnClose</sup>），订阅主题（取消订阅）<sup>@OnMessage</sup>，消息推送三大部分，而<strong>鉴权校验</strong>这个步骤则放在建立连接的过程中。</p><h3 id="鉴权设计" tabindex="-1">鉴权设计 <a class="header-anchor" href="#鉴权设计" aria-label="Permalink to &quot;鉴权设计&quot;">​</a></h3><p><img src="'+t+`" alt="鉴权设计"></p><p>因为WebSocket服务和Web服务同域，所以前端可以将Web服务请求中的Cookie透传到WebSocket连接中，因此后端也就能够拿到<strong>Cookie中的ctgt进行jwt鉴权</strong>，令牌校验通过之后接口会同步返回<code>userId</code>，这样用户标识和WebSocket的<code>Session</code>也就同步建立起了关联。</p><p>而其中涉及的接口和技术介绍可参考wiki <a href="https://wiki.hikvision.com.cn/pages/viewpage.action?pageId=148977420" target="_blank" rel="noreferrer">19、(aries)安全防护认证Token：aries-jc-jwt</a>。</p><h2 id="🌳源码探究" tabindex="-1">🌳源码探究 <a class="header-anchor" href="#🌳源码探究" aria-label="Permalink to &quot;🌳源码探究&quot;">​</a></h2><h3 id="启动配置类" tabindex="-1">启动配置类 <a class="header-anchor" href="#启动配置类" aria-label="Permalink to &quot;启动配置类&quot;">​</a></h3><p>这个类核心功能即构造<code>ServerEndpointExporter</code> Bean对象，以扫描注册带有<code>@ServerEndpoint</code>注解声明的WebSocket消息处理类。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * websocket 配置</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@author</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> yuanzp</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * @date 2022/12/1 15:10</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * @digression done is better than perfect.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Configuration</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ConditionalOnProperty</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">prefix</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> WebSocketServerProperties.PREFIX,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;enable&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">havingValue</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;true&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">EnableConfigurationProperties</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({WebSocketServerProperties.class})</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> WebSocketServerAutoConfiguration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Autowired</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    private</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> WebSocketServerProperties config;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * 开启WebSocket支持</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * 这个Bean会自动注册使用{@link ServerEndpoint}注解声明的websocket endpoint</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@return</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Bean</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ConditionalOnMissingBean</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ServerEndpointExporter </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">serverEndpointExporter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        ServerEndpointExporter serverEndpointExporter </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ServerEndpointExporter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (config.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isPrintBanner</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            LOGOPrinter.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> serverEndpointExporter;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="鉴权抽象方法" tabindex="-1">鉴权抽象方法 <a class="header-anchor" href="#鉴权抽象方法" aria-label="Permalink to &quot;鉴权抽象方法&quot;">​</a></h3><p>在消息处理抽象类中统一处理<code>onOpen</code>连接相关逻辑，并且定义了<code>boolean isAuthorized(Session session)</code>鉴权校验抽象方法，然后在建立连接的时候调用判断此连接是否有效。核心代码逻辑如下：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * 检查客户端握手数据是否被授权</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> session</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@return</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> abstract</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> boolean</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> isAuthorized</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Session session);</span></span></code></pre></div><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * 连接建立成功调用的方法</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">OnOpen</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> onOpen</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Session session) throws IOException {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	LOG.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Connect OK,Session ID : {}.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, session.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">	if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">!</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isAuthorized</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(session)) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		LOG.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">debug</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;The client is not authorized,Session ID : {}.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, session.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getId</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">		sendMessageByClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(session, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;The client is not authorized!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">		session.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">close</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">		return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	}</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.session </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> session;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	RoomUtil.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(session);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	sendMessageByClient</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(session, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Welcome to the Jungle!&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="鉴权实现逻辑" tabindex="-1">鉴权实现逻辑 <a class="header-anchor" href="#鉴权实现逻辑" aria-label="Permalink to &quot;鉴权实现逻辑&quot;">​</a></h3><p>上面讲到了鉴权的抽象方法，接下来看下该抽象方法在业务消息处理抽象类中的具体实现逻辑，其中主要核心就是从<code>Session::getUserProperties</code>中获取<code>castgc</code>（<em>那么这个参数是在哪儿写入的呢？？？</em>），之后调用<code>jwtService.applyCT(castgc)</code>和<code>jwtService.checkCT(ct)</code>两个方法进行鉴权。</p><p>另外需要强调的是<code>JwtService</code>的注入方式有点特殊，需要将变量定义为<code>static</code>，这么做的原因是WebSocket每次建立连接的时候都会<code>new</code>一个新对象，如果不是静态变量，那个在建立连接时候必定会报空指针异常。</p><p>另外还增加了一个<code>devMode</code>开发者模式开关，方便本地开发联调。核心代码逻辑如下：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * 业务消息处理抽象类，主要抽取外层通用的 {@link BaseResult} 和 {@link MessageDTO} ，&lt;br/&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * 保证{@link AbstractSocketMessageHandler}的纯洁~&lt;br/&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * 除此以外，提供和业务‘嘻嘻’相关的能力：jc jwt鉴权{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@link</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> #</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">isAuthorized(Session)</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">}，用户信息存储{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@link</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> #</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">setSessionStore(Session, String, Object)</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">}，通用订阅回调失败处理{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@link</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> #</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">subscribeCallbackError(Session, SubscribeDTO, Exception)</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">}等等。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@author</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> yuanzp</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * @date 2022/12/8 10:28</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * @digression done is better than perfect.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Slf4j</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> abstract</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AbstractBusinessMessageHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">P</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">M</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AbstractSocketMessageHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">P</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, BaseResult&lt;MessageDTO&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">M</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;&gt; {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> String USER_KEY </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;user&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> JwtService jwtService;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Boolean devMode;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Autowired</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AbstractBusinessMessageHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(JwtService </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">jwtService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                                               @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;\${cvalarm.websocket.mode.dev:false}&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) Boolean </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">devMode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        AbstractBusinessMessageHandler.jwtService </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> jwtService;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        AbstractBusinessMessageHandler.devMode </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> devMode;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Override</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> boolean</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> isAuthorized</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Session </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">session</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        String castgc </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Optional.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ofNullable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(session).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Session</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">getUserProperties)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(map </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> map.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(WebSocketServerEndpointConfig.AUTHORIZATION_PARAM)).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">valueOf).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">orElse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (devMode) {</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">            setUser</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(session, Constant.ADMIN_USER);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (StrUtil.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isBlank</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(castgc)) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            log.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;JWT ct is blank.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        String userId;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            String ct </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> jwtService.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">applyCT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(castgc);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            userId </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> jwtService.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">checkCT</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ct);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (AuthorizationException </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">e</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            log.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;JWT checkCT error.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, e);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (StrUtil.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isBlank</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(userId)) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            log.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">error</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;JWT checkCT return null.&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        setUser</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(session, userId);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="cookie参数解析" tabindex="-1">Cookie参数解析 <a class="header-anchor" href="#cookie参数解析" aria-label="Permalink to &quot;Cookie参数解析&quot;">​</a></h3><p>解答下上面提到的<code>Session::getUserProperties</code>中<code>castgc</code>数据来源问题，这里需要自定实现一个<code>ServerEndpointConfig.Configurator</code>用以解析Cookie中的<code>castgc</code>，核心代码逻辑如下：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * 自定义endpoint</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@author</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> yuanzp</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * @date 2022/12/14 20:25</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * @digression done is better than perfect.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Slf4j</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> WebSocketServerEndpointConfig</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ServerEndpointConfig.Configurator</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> String AUTHORIZATION_PARAM </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;CASTGC&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Override</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> modifyHandshake</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(ServerEndpointConfig </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">sec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, HandshakeRequest </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, HandshakeResponse </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">response</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        Map&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Object</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; userProperties </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> sec.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getUserProperties</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        Map&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, List&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt; headers </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> request.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getHeaders</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        Assert.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">notNull</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(userProperties);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        Assert.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">notNull</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(headers);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        String token </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Optional.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ofNullable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Cookies.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">parseRequestCookies</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">250</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, headers.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Headers.COOKIE.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                .</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(map</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">map.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">get</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(AUTHORIZATION_PARAM)).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">map</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Cookie</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">getValue).</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">orElse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        userProperties.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">put</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(AUTHORIZATION_PARAM, token);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>而此处Cookie的解析逻辑参考自Spring<code>@CookieValue</code>注解的源代码<code>ServletCookieValueMethodArgumentResolver</code>，因此大大简化了Cookie的解析过程，感兴趣的小伙伴可自行查看。</p><h3 id="消息处理类" tabindex="-1">消息处理类 <a class="header-anchor" href="#消息处理类" aria-label="Permalink to &quot;消息处理类&quot;">​</a></h3><p>对于具体的业务消息处理类来说，鉴权的逻辑几乎就是透明的，在<code>@ServerEndpoint</code>注解上加上自定义的<code>WebSocketServerEndpointConfig</code>，除此以外不需要做任何的操作，即可轻松实现鉴权。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * 执法力量（APP）处理类，支持的GPS数据类型详见 {@link GpsDeviceClassEnum}，Topic主题复用此资源类型。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@author</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> yuanzp</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * @date 2022/12/1 15:28</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * @digression done is better than perfect.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Slf4j</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Component</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">@</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ServerEndpoint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MobileDeviceHandler.SERVER_ENDPOINT, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">encoders</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> WebSocketCustomEncoding.class,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        configurator</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> WebSocketServerEndpointConfig.class)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> MobileDeviceHandler</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AbstractBusinessMessageHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Object</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, List&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MobileDeviceMessageDTO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt; {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> String SERVER_ENDPOINT </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;/ws/MOBILE_DEVICE&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> XmapGpsService xmapGpsService;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Autowired</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> setXmapGpsService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(XmapGpsService </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">xmapGpsService</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        MobileDeviceHandler.xmapGpsService </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> xmapGpsService;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Override</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Boolean </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">validatedSubscribeParam</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(SubscribeDTO&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Object</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">message</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        String topic </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> message.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getTopic</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        MobileDeviceTopicEnum mobileDeviceTopicEnum </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MobileDeviceTopicEnum.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">valueOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(topic);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ObjectUtil.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">isNotNull</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(mobileDeviceTopicEnum);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Override</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    protected</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> subscribeCallback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Session </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">session</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, SubscribeDTO&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Object</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">message</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        super</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">subscribeCallback</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(session, message);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        String topic </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> message.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getTopic</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        GpsDeviceClassEnum gpsDeviceClassEnum </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> EnumUtil.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">likeValueOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(GpsDeviceClassEnum.class, topic);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        List&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MobileDeviceMessageDTO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; mobileDeviceMessageDTOS </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> xmapGpsService.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">queryRealGpsDevice</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(gpsDeviceClassEnum);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        MessageDTO&lt;List&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MobileDeviceMessageDTO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt; messageDTO </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> createMessageBean</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(topic, mobileDeviceMessageDTOS);</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        super</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sendBusinessMessageToTopicRoomClients</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(messageDTO);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    @</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Override</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> businessProcessor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">topic</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, List&lt;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">MobileDeviceMessageDTO</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">messageObj</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="🌿结果验证" tabindex="-1">🌿结果验证 <a class="header-anchor" href="#🌿结果验证" aria-label="Permalink to &quot;🌿结果验证&quot;">​</a></h2><p>本次WebSocket使用&quot;<a href="https://toscode.gitee.com/wuyazi2018/WebsocketMan" target="_blank" rel="noreferrer">WebSocketMan</a>&quot;客户端工具进行测试，结果主要从客户端连接打印以及服务端日志两方面进行验证。</p><h3 id="鉴权失败" tabindex="-1">鉴权失败 <a class="header-anchor" href="#鉴权失败" aria-label="Permalink to &quot;鉴权失败&quot;">​</a></h3><p>当Headers中不传Cookie（或者传错误的CASTGC）进行连接时，会提示鉴权失败并且同时关闭连接。</p><p><img src="`+l+`" alt="鉴权失败"></p><div class="language-less vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">less</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">2022-12-28T09:40:11</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.687</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">+08:00 DEBUG cvalarm</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.cvalarm-data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">XNIO-1</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> task-1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">com</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hikvision</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pbg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cvalarm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">modules</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">socket</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AbstractSocketMessageHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:101]   - Connect OK,Session ID : R11_JEbNzwcE3gEig52tUppLmkb7cWdW1H17wQZr</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">2022-12-28T09:40:11</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.691</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">+08:00 ERROR cvalarm</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.cvalarm-data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">XNIO-1</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> task-1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">c</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">h</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pbg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cvalarm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">modules</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">websocket</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">handler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AbstractBusinessMessageHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:87]   - JWT ct is blank</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">2022-12-28T09:40:11</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.712</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">+08:00 DEBUG cvalarm</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.cvalarm-data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">XNIO-1</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> task-1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">com</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hikvision</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pbg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cvalarm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">modules</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">socket</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AbstractSocketMessageHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:103]   - The client is not authorized,Session ID : R11_JEbNzwcE3gEig52tUppLmkb7cWdW1H17wQZr</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> </span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">2022-12-28T09:40:11</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.729</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">+08:00 DEBUG cvalarm</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.cvalarm-data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">XNIO-1</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> task-1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">com</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hikvision</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pbg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cvalarm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">modules</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">socket</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AbstractSocketMessageHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:118]   - Disconnect OK,Session ID : R11_JEbNzwcE3gEig52tUppLmkb7cWdW1H17wQZr</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.</span></span></code></pre></div><h3 id="鉴权成功" tabindex="-1">鉴权成功 <a class="header-anchor" href="#鉴权成功" aria-label="Permalink to &quot;鉴权成功&quot;">​</a></h3><p>登录门户平台，F12查看请求Request Headers，并且拷贝Cookie参数进行测试验证。一旦鉴权通过，及会提示连接成功。</p><blockquote><p><strong>📣注意</strong></p><p>记得将/ws/**请求增加cas忽略，否则可能存在首次访问无法加载问题。</p></blockquote><p><img src="`+p+'" alt="门户获取Cookie"></p><p><img src="'+e+'" alt="鉴权成功"></p><div class="language-less vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">less</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">2022-12-28T09:44:27</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.809</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">+08:00 DEBUG cvalarm</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.cvalarm-data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">XNIO-1</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> task-1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] [</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">com</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">hikvision</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pbg</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cvalarm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">data</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">modules</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">socket</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">AbstractSocketMessageHandler</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:101]   - Connect OK,Session ID : 2kdUmtSylRbkRZNcELAVXrpM4QlJVdjKl-te2ZPP</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.</span></span></code></pre></div><h2 id="🌼结束语" tabindex="-1">🌼结束语 <a class="header-anchor" href="#🌼结束语" aria-label="Permalink to &quot;🌼结束语&quot;">​</a></h2><p>有缘看到这篇分享的小伙伴，如果上文描述中有不妥当或错误的地方还恳请指正，最后希望在WebSocket鉴权方面给你带去了一点启发和参考。</p><p>最后的最后，祝你新年快乐🎉，盆友~<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup></p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>JSON Web Token（JWT）是一个开放标准(RFC 7519)，它定义了一种紧凑的、自包含的方式，用于作为JSON对象在各方之间安全地传输信息，是目前最流行的跨域身份验证解决方案。 <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p>基于Netty框架，使用Java语言实现的一套Socket.IO服务器端通信工具。 <a href="#fnref2" class="footnote-backref">↩︎</a></p></li><li id="fn3" class="footnote-item"><p>“生活没有那么的美好，也没有那么糟糕。”---created by 袁志鹏 on 十二月 20,2022；last edited by 袁志鹏 on 十二月 29,2022 <a href="#fnref3" class="footnote-backref">↩︎</a></p></li></ol></section>',59),d=[r];function g(y,o,c,F,A,D){return a(),i("div",null,d)}const b=s(E,[["render",g]]);export{u as __pageData,b as default};
