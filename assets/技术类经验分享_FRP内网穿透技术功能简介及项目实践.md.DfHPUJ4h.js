import{_ as t,D as h,c as e,j as i,a as s,I as n,w as p,a4 as l,o as k}from"./chunks/framework.CUMjAKNJ.js";const r="/yzp-blog/assets/%E7%8E%B0%E7%8A%B6%E9%97%AE%E9%A2%98%E5%88%86%E6%9E%90.cqvek_ru.png",d="/yzp-blog/assets/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.Dj-MVPqx.png",o="/yzp-blog/assets/%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86.Cs-5L3zP.png",c="/yzp-blog/assets/%E4%BB%A3%E7%90%86%E7%B1%BB%E5%9E%8B.B9oxRLgZ.png",g="/yzp-blog/assets/image-20221119141714365.B5SlOr96.png",E="/yzp-blog/assets/image-20221119141609869.DXcEmuV4.png",y="/yzp-blog/assets/http_proxy.DxWA9PsB.png",F="/yzp-blog/assets/socks5.BDH7DhCL.png",u="/yzp-blog/assets/static_file.Bgk0PS0L.png",b="/yzp-blog/assets/unix_domain_socket.5V9lVKrn.png",f="/yzp-blog/assets/http2https.Cjn_lk-p.png",m="/yzp-blog/assets/https2http.CI0uv9Pt.png",C="/yzp-blog/assets/https2https.Cf4bvBQ6.png",_="/yzp-blog/assets/%E9%A1%B9%E7%9B%AE%E7%BD%91%E7%BB%9C%E5%B8%83%E8%AE%BE%E5%9B%BE.Bwg3dGru.png",v="/yzp-blog/assets/%E5%AE%89%E8%A3%85%E5%8C%85%E4%BF%A1%E6%81%AF.goPI_by9.png",B="/yzp-blog/assets/image-20221119144753992.D1VfKRwk.png",D="/yzp-blog/assets/image-20221119151500424.E7HcVmOs.png",A="/yzp-blog/assets/image-20221119151343844.Cd11l39V.png",N=JSON.parse('{"title":"FRP内网穿透技术功能简介及项目实践","description":"","frontmatter":{},"headers":[],"relativePath":"技术类经验分享/FRP内网穿透技术功能简介及项目实践.md","filePath":"技术类经验分享/FRP内网穿透技术功能简介及项目实践.md"}'),x={name:"技术类经验分享/FRP内网穿透技术功能简介及项目实践.md"},P=l('<h1 id="frp内网穿透技术功能简介及项目实践" tabindex="-1">FRP内网穿透技术功能简介及项目实践 <a class="header-anchor" href="#frp内网穿透技术功能简介及项目实践" aria-label="Permalink to &quot;FRP内网穿透技术功能简介及项目实践&quot;">​</a></h1><h2 id="背景简介" tabindex="-1">背景简介 <a class="header-anchor" href="#背景简介" aria-label="Permalink to &quot;背景简介&quot;">​</a></h2><p>“新建贵南铁路广西段周界地灾预警项目”是由云桂公司副总经理牵头的一个铁路新课题，将列入国铁集团下半年的重点攻关目标，成果将行业具有较高的推广价值。</p><p>该课题主要由各家厂商负责方案的设计及系统实施，并在那眉岭二号隧道（故下文中项目简称“那眉岭项目”）进行统一测试验证，最终云桂铁路广西公司会依据经评审的测试报告，统筹安排各家在具体区段进行系统试运行一年。</p><p>“那眉岭项目”作为一个测试PK项目，面临着时间紧，现场环境复杂等问题。另外在本次测试PK中，除了需要兼顾平台相关报警数据的生成，还需要对接由云贵公司牵头搭建的上级平台“贵南高铁管理平台”（下文简称“上级平台”），将相关设备运维信息、告警记录等数据推送上级平台进行统一展示。</p><h3 id="现状问题分析" tabindex="-1">现状问题分析 <a class="header-anchor" href="#现状问题分析" aria-label="Permalink to &quot;现状问题分析&quot;">​</a></h3><p><img src="'+r+'" alt="现状问题分析"></p><p>由于“上级平台”搭建在公网云服务器中，而且整个数据访问入口统一为上级平台。因此本次测试涉及的数据推送对接（MQTT协议<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>）要求内网服务器能够连通外网；另外推送给上级的图片URL以及视频RTSP<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup>取流串也需要同步暴露公网访问。内网服务器连通外网这个现场技术支持兄弟通过双网卡路由方式搞定了，但是暴露公网访问这个由于需要公网服务器及IP资源，内部一时半会儿也没能确定一个经济可行的解决方案。</p><p>除此以外现场的测试环部署在内网环境内且无公网固定IP，由于网络资源的限制，在处理相关交付问题时，就需要相关同事到达现场去配置、排查及定位问题或者搭建网络环境提供给总部的相关同事进行远程定位问题，相对来说也不是特别方便。</p><h3 id="解决方案" tabindex="-1">解决方案 <a class="header-anchor" href="#解决方案" aria-label="Permalink to &quot;解决方案&quot;">​</a></h3><p><img src="'+d+'" alt="解决方案"></p><p>因为本次只是一个为期一个月左右的PK测试项目，机房也临时搭建在隧道口的一个集装箱板房内，所以肯定没有用户为公网资源这块付费买单。</p><p>了解到公司恰好有途经可以申请到短时间使用权限的公网服务器及IP资源，所以最后决定采用<strong>frp内网穿透</strong>的方案，相对本次测试来说此方案性价比更高。</p><p>那么接来下就简单介绍下frp内网穿透技术的部署使用以及功能特性等知识，并且结合实际的项目实践，归纳总结了一些实操分析。</p><h2 id="frp介绍" tabindex="-1">FRP介绍 <a class="header-anchor" href="#frp介绍" aria-label="Permalink to &quot;FRP介绍&quot;">​</a></h2><h3 id="frp-是什么" tabindex="-1">frp 是什么？ <a class="header-anchor" href="#frp-是什么" aria-label="Permalink to &quot;frp 是什么？&quot;">​</a></h3><p>frp 是一个专注于内网穿透的高性能的反向代理应用，支持 <code>TCP</code>、<code>UDP</code>、<code>HTTP</code>、<code>HTTPS</code> 等多种协议。可以将内网服务以安全、便捷的方式通过具有公网 IP 节点的中转暴露到公网。</p><h3 id="为什么使用-frp" tabindex="-1">为什么使用 frp？ <a class="header-anchor" href="#为什么使用-frp" aria-label="Permalink to &quot;为什么使用 frp？&quot;">​</a></h3><p>通过在具有公网 IP 的节点上部署 frp 服务端，可以轻松地将内网服务穿透到公网，同时提供诸多专业的功能特性，这包括：</p><ul><li>客户端服务端通信支持 <code>TCP</code>、<code>KCP</code> 以及 <code>Websocket</code> 等多种协议。</li><li>采用 <code>TCP</code> 连接流式复用，在单个连接间承载更多请求，节省连接建立时间。</li><li>代理组间的负载均衡。</li><li>端口复用，多个服务通过同一个服务端端口暴露。</li><li>多个原生支持的客户端插件（静态文件查看，<code>HTTP</code>、<code>SOCK5</code> 代理等），便于独立使用 frp 客户端完成某些工作。</li><li>高度扩展性的服务端插件系统，方便结合自身需求进行功能扩展。</li><li>服务端和客户端 UI 页面。</li></ul><h3 id="工作原理" tabindex="-1">工作原理 <a class="header-anchor" href="#工作原理" aria-label="Permalink to &quot;工作原理&quot;">​</a></h3><p><img src="'+o+'" alt="工作原理"></p><p>frp 主要由 <strong>客户端(frpc)</strong> 和 <strong>服务端(frps)</strong> 组成，服务端通常部署在具有公网 IP 的机器上，客户端通常部署在需要穿透的内网服务所在的机器上。</p><p>内网服务由于没有公网 IP，不能被非局域网内的其他用户访问。</p><p>用户通过访问服务端的 frps，由 frp 负责根据请求的端口或其他信息将请求路由到对应的内网机器，从而实现通信。</p><h3 id="代理类型" tabindex="-1">代理类型 <a class="header-anchor" href="#代理类型" aria-label="Permalink to &quot;代理类型&quot;">​</a></h3><p>frp 支持多种代理类型来适配不同的使用场景。</p><p><img src="'+c+`" alt="代理类型"></p><h2 id="安装部署" tabindex="-1">安装部署 <a class="header-anchor" href="#安装部署" aria-label="Permalink to &quot;安装部署&quot;">​</a></h2><p>frp 采用 <code>Golang</code> <sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup>编写，支持跨平台，仅需下载对应平台的二进制文件即可执行，没有额外依赖。</p><h3 id="系统需求" tabindex="-1">系统需求 <a class="header-anchor" href="#系统需求" aria-label="Permalink to &quot;系统需求&quot;">​</a></h3><p>由于采用 <code>Golang</code> 编写，所以系统需求和最新的 <code>Golang</code> 对系统和平台的要求一致，具体可以参考 <a href="https://golang.org/doc/install#requirements" target="_blank" rel="noreferrer">Golang System requirements</a>。</p><h3 id="下载" tabindex="-1">下载 <a class="header-anchor" href="#下载" aria-label="Permalink to &quot;下载&quot;">​</a></h3><p>目前可以在 Github 的 <a href="https://github.com/fatedier/frp/releases" target="_blank" rel="noreferrer">Release</a> 页面中下载到最新版本的客户端和服务端二进制文件，所有文件被打包在一个压缩包中。</p><h3 id="部署" tabindex="-1">部署 <a class="header-anchor" href="#部署" aria-label="Permalink to &quot;部署&quot;">​</a></h3><p>解压缩下载的压缩包，将其中的 frpc 拷贝到内网服务所在的机器上，将 frps 拷贝到具有公网 IP 的机器上，放置在任意目录。</p><h3 id="开始使用" tabindex="-1">开始使用 <a class="header-anchor" href="#开始使用" aria-label="Permalink to &quot;开始使用&quot;">​</a></h3><p>编写配置文件，先通过 <code>./frps -c ./frps.ini</code> 启动服务端，再通过 <code>./frpc -c ./frpc.ini</code> 启动客户端。如果需要在后台长期运行，建议结合其他工具使用，例如 <a href="https://gofrp.org/docs/setup/systemd/" target="_blank" rel="noreferrer">systemd</a> 和 <code>supervisor</code>。</p><p>如果是 Windows 用户，需要在 cmd 终端中执行命令。</p><p>配置文件如何编写可以参考 下面<a href="#通用示例">通用示例</a> 章节中的内容。</p><h2 id="通用示例" tabindex="-1">通用示例 <a class="header-anchor" href="#通用示例" aria-label="Permalink to &quot;通用示例&quot;">​</a></h2><h3 id="通过-ssh-访问内网机器" tabindex="-1">通过 SSH 访问内网机器 <a class="header-anchor" href="#通过-ssh-访问内网机器" aria-label="Permalink to &quot;通过 SSH 访问内网机器&quot;">​</a></h3><blockquote><p>这个示例通过简单配置 TCP 类型的代理让用户访问到内网的服务器。</p></blockquote><ol><li><p>在具有公网 IP 的机器上部署 frps，修改 frps.ini 文件，这里使用了最简化的配置，设置了 frp 服务器用户接收客户端连接的端口：</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[common]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bind_port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 7000</span></span></code></pre></div></li><li><p>在需要被访问的内网机器上（SSH 服务通常监听在 22 端口）部署 frpc，修改 frpc.ini 文件，假设 frps 所在服务器的公网 IP 为 x.x.x.x：</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[common]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">server_addr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = x.x.x.x</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">server_port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 7000</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[ssh]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = tcp</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local_ip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 127.0.0.1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local_port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 22</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">remote_port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 6000</span></span></code></pre></div><p><code>local_ip</code> 和 <code>local_port</code> 配置为本地需要暴露到公网的服务地址和端口。<code>remote_port</code> 表示在 frp 服务端监听的端口，访问此端口的流量将会被转发到本地服务对应的端口。</p></li><li><p>分别启动 frps 和 frpc。</p></li><li><p>通过 SSH 访问内网机器，假设用户名为 test：</p><p><code>ssh -oPort=6000 test@x.x.x.x</code></p><p>frp 会将请求 <code>x.x.x.x:6000</code> 的流量转发到内网机器的 22 端口。</p></li></ol><h3 id="通过自定义域名访问内网的-web-服务" tabindex="-1">通过自定义域名访问内网的 Web 服务 <a class="header-anchor" href="#通过自定义域名访问内网的-web-服务" aria-label="Permalink to &quot;通过自定义域名访问内网的 Web 服务&quot;">​</a></h3><blockquote><p>这个示例通过简单配置 HTTP 类型的代理让用户访问到内网的 Web 服务。</p></blockquote><p>HTTP 类型的代理相比于 TCP 类型，不仅在服务端只需要监听一个额外的端口 <code>vhost_http_port</code> 用于接收 HTTP 请求，还额外提供了基于 HTTP 协议的诸多功能。</p><ol><li><p>修改 frps.ini 文件，设置监听 HTTP 请求端口为 8080：</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[common]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bind_port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 7000</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">vhost_http_port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 8080</span></span></code></pre></div></li><li><p>修改 frpc.ini 文件，假设 frps 所在的服务器的 IP 为 x.x.x.x，<code>local_port</code> 为本地机器上 Web 服务监听的端口, 绑定自定义域名为 <code>custom_domains</code>。</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[common]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">server_addr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = x.x.x.x</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">server_port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 7000</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[web]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = http</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local_port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 80</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">custom_domains</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = www.yourdomain.com</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[web2]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = http</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local_port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 8080</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">custom_domains</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = www.yourdomain2.com</span></span></code></pre></div></li><li><p>分别启动 frps 和 frpc。</p></li><li><p>将 <code>www.yourdomain.com</code> 和 <code>www.yourdomain2.com</code> 的域名 A 记录解析到 IP <code>x.x.x.x</code>，如果服务器已经有对应的域名，也可以将 CNAME 记录解析到服务器原先的域名。或者可以通过修改 HTTP 请求的 Host 字段来实现同样的效果。</p></li><li><p>通过浏览器访问 <code>http://www.yourdomain.com:8080</code> 即可访问到处于内网机器上 80 端口的服务，访问 <code>http://www.yourdomain2.com:8080</code> 则访问到内网机器上 8080 端口的服务。</p></li></ol><h3 id="转发-dns-查询请求" tabindex="-1">转发 DNS 查询请求 <a class="header-anchor" href="#转发-dns-查询请求" aria-label="Permalink to &quot;转发 DNS 查询请求&quot;">​</a></h3><blockquote><p>这个示例通过简单配置 UDP 类型的代理转发 DNS 查询请求。</p></blockquote><p>DNS 查询请求通常使用 UDP 协议，frp 支持对内网 UDP 服务的穿透，配置方式和 TCP 基本一致。</p><ol><li><p>frps.ini 内容如下：</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[common]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bind_port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 7000</span></span></code></pre></div></li><li><p>frpc.ini 内容如下：</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[common]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">server_addr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = x.x.x.x</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">server_port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 7000</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[dns]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = udp</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local_ip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 8.8.8.8</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local_port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 53</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">remote_port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 6000</span></span></code></pre></div><p>这里反代了 Google 的 DNS 查询服务器的地址，仅仅用于测试 UDP 代理，并无实际意义。</p></li><li><p>分别启动 frps 和 frpc。</p></li><li><p>通过 dig 测试 UDP 包转发是否成功，预期会返回 <code>www.baidu.com</code> 域名的解析结果。</p><p><code>dig @x.x.x.x -p 6000 www.baidu.com</code></p></li></ol><h3 id="对外提供简单的文件访问服务" tabindex="-1">对外提供简单的文件访问服务 <a class="header-anchor" href="#对外提供简单的文件访问服务" aria-label="Permalink to &quot;对外提供简单的文件访问服务&quot;">​</a></h3><blockquote><p>这个示例通过配置 <code>static_file</code> 客户端插件来将本地文件暴露在公网上供其他人访问。</p></blockquote><p>通过 <code>static_file</code> 插件可以对外提供一个简单的基于 HTTP 的文件访问服务。</p><ol><li><p>frps.ini 内容如下：</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[common]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bind_port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 7000</span></span></code></pre></div></li><li><p>frpc.ini 内容如下：</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[common]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">server_addr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = x.x.x.x</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">server_port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 7000</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[test_static_file]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = tcp</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">remote_port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 6000</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">plugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = static_file</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 要对外暴露的文件目录</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">plugin_local_path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = /tmp/file</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 用户访问 URL 中会被去除的前缀，保留的内容即为要访问的文件路径</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">plugin_strip_prefix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = static</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">plugin_http_user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = abc</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">plugin_http_passwd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = abc</span></span></code></pre></div></li><li><p>分别启动 frps 和 frpc。</p></li><li><p>通过浏览器访问 <code>http://x.x.x.x:6000/static/</code> 来查看位于 <code>/tmp/file</code> 目录下的文件，会要求输入已设置好的用户名和密码。</p></li></ol><h3 id="为本地-http-服务启用-https" tabindex="-1">为本地 HTTP 服务启用 HTTPS <a class="header-anchor" href="#为本地-http-服务启用-https" aria-label="Permalink to &quot;为本地 HTTP 服务启用 HTTPS&quot;">​</a></h3><blockquote><p>通过 <code>https2http</code> 插件可以让本地 HTTP 服务转换成 HTTPS 服务对外提供。</p></blockquote><ol><li><p>frps.ini 内容如下：</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[common]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bind_port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 7000</span></span></code></pre></div></li><li><p>frpc.ini 内容如下：</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[common]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">server_addr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = x.x.x.x</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">server_port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 7000</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[test_htts2http]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = https</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">custom_domains</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = test.yourdomain.com</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">plugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = https2http</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">plugin_local_addr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 127.0.0.1:80</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># HTTPS 证书相关的配置</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">plugin_crt_path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = ./server.crt</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">plugin_key_path</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = ./server.key</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">plugin_host_header_rewrite</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 127.0.0.1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">plugin_header_X-From-Where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = frp</span></span></code></pre></div></li><li><p>分别启动 frps 和 frpc。</p></li><li><p>通过浏览器访问 <code>https://test.yourdomain.com</code>。</p></li></ol><h2 id="功能特性" tabindex="-1">功能特性 <a class="header-anchor" href="#功能特性" aria-label="Permalink to &quot;功能特性&quot;">​</a></h2><h3 id="服务端" tabindex="-1">服务端 <a class="header-anchor" href="#服务端" aria-label="Permalink to &quot;服务端&quot;">​</a></h3><h4 id="服务端-dashboard" tabindex="-1">服务端 Dashboard <a class="header-anchor" href="#服务端-dashboard" aria-label="Permalink to &quot;服务端 Dashboard&quot;">​</a></h4><p>服务端 Dashboard 使用户可以通过浏览器查看 frp 的状态以及代理统计信息。</p><blockquote><p><strong>注：Dashboard 尚未针对大量的 proxy 数据展示做优化，如果出现 Dashboard 访问较慢的情况，请不要启用此功能。</strong></p></blockquote><p>需要在 frps.ini 中指定 dashboard 服务使用的端口，即可开启此功能：</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># frps.ini</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[common]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">dashboard_port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 7500</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># dashboard 用户名密码，可选，默认为空</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">dashboard_user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = admin</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">dashboard_pwd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = admin</span></span></code></pre></div><p>打开浏览器通过 <code>http://[server_addr]:7500</code> 访问 Dashboard 界面，输入用户名密码 <code>admin</code>。</p><p><img src="`+g+`" alt="image-20221119141714365"></p><p>你也可以通过配置 TLS 证书来启用 HTTPS 接口:</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">dashboard_tls_mode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = true</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">dashboard_tls_cert_file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = server.crt</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">dashboard_tls_key_file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = server.key</span></span></code></pre></div><h4 id="端口白名单" tabindex="-1">端口白名单 <a class="header-anchor" href="#端口白名单" aria-label="Permalink to &quot;端口白名单&quot;">​</a></h4><p>为了防止端口被滥用，可以手动指定允许哪些端口被使用，在服务端配置中通过 <code>allow_ports</code> 来指定：</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># frps.ini</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[common]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">allow_ports</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 2000-3000,3001,3003,4000-50000</span></span></code></pre></div><p><code>allow_ports</code> 可以配置允许使用的某个指定端口或者是一个范围内的所有端口，以 <code>,</code> 分隔，指定的范围以 <code>-</code> 分隔。</p><h4 id="端口复用" tabindex="-1">端口复用 <a class="header-anchor" href="#端口复用" aria-label="Permalink to &quot;端口复用&quot;">​</a></h4><p>目前 frps 中的 <code>vhost_http_port</code> 和 <code>vhost_https_port</code> 支持配置成和 <code>bind_port</code> 为同一个端口，frps 会对连接的协议进行分析，之后进行不同的处理。</p><p>例如在某些限制较严格的网络环境中，可以将 <code>bind_port</code> 和 <code>vhost_https_port</code> 都设置为 443。</p><h4 id="代理限速" tabindex="-1">代理限速 <a class="header-anchor" href="#代理限速" aria-label="Permalink to &quot;代理限速&quot;">​</a></h4><p>目前支持在客户端的代理配置中设置代理级别的限速，限制单个 proxy 可以占用的带宽。</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># frpc.ini</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[ssh]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = tcp</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local_port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 22</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">remote_port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 6000</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bandwidth_limit</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 1MB</span></span></code></pre></div><p>在代理配置中增加 <code>bandwidth_limit</code> 字段启用此功能，目前仅支持 <code>MB</code> 和 <code>KB</code> 单位。</p><h3 id="客户端" tabindex="-1">客户端 <a class="header-anchor" href="#客户端" aria-label="Permalink to &quot;客户端&quot;">​</a></h3><h4 id="客户端管理界面" tabindex="-1">客户端管理界面 <a class="header-anchor" href="#客户端管理界面" aria-label="Permalink to &quot;客户端管理界面&quot;">​</a></h4><p>frpc 内置的 Admin UI 可以帮助用户通过浏览器来查询和管理客户端的 proxy 状态和配置。</p><p>需要在 frpc.ini 中指定 admin 服务使用的端口，即可开启此功能：</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># frpc.ini</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[common]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">admin_addr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 127.0.0.1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">admin_port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 7400</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">admin_user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = admin</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">admin_pwd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = admin</span></span></code></pre></div><p>打开浏览器通过 <code>http://127.0.0.1:7400</code> 访问 Admin UI。</p><p><img src="`+E+`" alt="image-20221119141609869"></p><p>如果想要在外网环境访问 Admin UI，可以将 7400 端口通过 frp 映射出去即可，但需要重视安全风险。</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># frpc.ini</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[admin_ui]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = tcp</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local_port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 7400</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">remote_port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 7400</span></span></code></pre></div><h4 id="热加载配置文件" tabindex="-1">热加载配置文件 <a class="header-anchor" href="#热加载配置文件" aria-label="Permalink to &quot;热加载配置文件&quot;">​</a></h4><p>当修改了 frpc 中的代理配置，可以通过 frpc reload 命令来动态加载配置文件，通常会在 10 秒内完成代理的更新。</p><p>启用此功能需要在 frpc 中启用 admin 端口，用于提供 API 服务。配置如下：</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># frpc.ini</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[common]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">admin_addr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 127.0.0.1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">admin_port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 7400</span></span></code></pre></div><p>之后执行重启命令：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@HikvisionOS frp]# ./frpc reload -c ./frpc.ini ⏎</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">reload</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> success</span></span></code></pre></div><p>等待一段时间后客户端会根据新的配置文件创建、更新、删除代理。</p><p>需要注意的是，[common] 中的参数除了 start 外目前无法被修改。</p><h4 id="命令行查看代理状态" tabindex="-1">命令行查看代理状态 <a class="header-anchor" href="#命令行查看代理状态" aria-label="Permalink to &quot;命令行查看代理状态&quot;">​</a></h4><p>frpc 支持通过 <code>frpc status -c ./frpc.ini</code> 命令查看代理的状态信息，此功能需要在 frpc 中配置 admin 端口。</p><h4 id="通过代理连接-frps" tabindex="-1">通过代理连接 frps <a class="header-anchor" href="#通过代理连接-frps" aria-label="Permalink to &quot;通过代理连接 frps&quot;">​</a></h4><p>在只能通过代理访问外网的环境内，frpc 支持通过 HTTP 或 SOCKS5 代理和 frps 建立连接。</p><p>可以通过设置 <code>HTTP_PROXY</code> 系统环境变量或者通过在 frpc 的配置文件中设置 <code>http_proxy</code> 参数来使用此功能。</p><p>仅在 <code>protocol = tcp</code> 时生效。</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># frpc.ini</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[common]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">server_addr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = x.x.x.x</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">server_port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 7000</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">http_proxy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = http://user:pwd@192.168.1.128:8080</span></span></code></pre></div><p>将 <code>http_proxy</code> 设置为 <code>socks5://user:pwd@192.168.1.128:8080</code> 也可以连接到 SOCKS5 代理。</p><h4 id="范围端口映射" tabindex="-1">范围端口映射 <a class="header-anchor" href="#范围端口映射" aria-label="Permalink to &quot;范围端口映射&quot;">​</a></h4><p>在 frpc 的配置文件中可以指定映射多个端口，目前只支持 TCP 和 UDP 的代理类型。</p><p>这一功能通过 <code>range:</code> 段落标记来实现，客户端会解析这个标记中的配置，将其拆分成多个 proxy，每一个 proxy 以数字为后缀命名。</p><p>例如要映射本地 6000-6005, 6007 这7个端口，主要配置如下：</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># frpc.ini</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[range:test_tcp]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = tcp</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local_ip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 127.0.0.1</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local_port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 6000-6005,6007</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">remote_port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 6000-6005,6007</span></span></code></pre></div><p>实际连接成功后会创建 7 个 proxy，命名为 <code>test_tcp_0, test_tcp_1 ... test_tcp_6</code>。</p><h4 id="客户端插件" tabindex="-1">客户端插件 <a class="header-anchor" href="#客户端插件" aria-label="Permalink to &quot;客户端插件&quot;">​</a></h4><p>默认情况下，frpc 只会转发请求到本地 TCP 或 UDP 端口，也就是通过 <code>local_ip</code> 和 <code>local_port</code> 指定的本地服务地址。</p><p>通过客户端插件的功能将一些简单的本地服务内置在 frpc 中，可以帮助用户在只启动 frpc 的情况下实现原本需要额外启动其他服务才能实现的功能。</p><p>在每一个代理的配置中，通过 <code>plugin</code> 指定需要使用的插件，插件的配置参数都以 <code>plugin_</code> 开头。当启用客户端插件后，<code>local_ip</code> 和 <code>local_port</code> 不再需要配置。</p><p>客户端插件可以被应用在任意类型的代理中，但是需要插件本身的协议能够支持。例如静态文件访问插件可以通过 TCP 或者 HTTP 的代理暴露出去。</p><p>使用 <code>http_proxy</code> 插件的示例:</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># frpc.ini</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[http_proxy]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = tcp</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">remote_port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 6000</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">plugin</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = http_proxy</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">plugin_http_user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = abc</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">plugin_http_passwd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = abc</span></span></code></pre></div><p><code>plugin_http_user</code> 和 <code>plugin_http_passwd</code> 即为 <code>http_proxy</code> 插件可选的配置参数。</p><h5 id="http-proxy" tabindex="-1">http_proxy <a class="header-anchor" href="#http-proxy" aria-label="Permalink to &quot;http_proxy&quot;">​</a></h5><p>HTTP 代理插件，用于将内网机器作为 HTTP 代理暴露给其他服务，可以通过此代理访问到此内网机器能够访问到的其他服务。</p><p><img src="`+y+'" alt="http_proxy"></p><h5 id="socks5" tabindex="-1">socks5 <a class="header-anchor" href="#socks5" aria-label="Permalink to &quot;socks5&quot;">​</a></h5><p>SOCKS5 代理。</p><p><img src="'+F+'" alt="socks5"></p><h5 id="static-file" tabindex="-1">static_file <a class="header-anchor" href="#static-file" aria-label="Permalink to &quot;static_file&quot;">​</a></h5><p>静态文件浏览服务，通过暴露一个简单的 HTTP 服务查看指定的目录下的文件。</p><p><img src="'+u+'" alt="static_file"></p><h5 id="unix-domain-socket" tabindex="-1">unix_domain_socket <a class="header-anchor" href="#unix-domain-socket" aria-label="Permalink to &quot;unix_domain_socket&quot;">​</a></h5><p>代理本地 Unix 域套接字的服务。</p><p><img src="'+b+'" alt="unix_domain_socket"></p><h5 id="http2https" tabindex="-1">http2https <a class="header-anchor" href="#http2https" aria-label="Permalink to &quot;http2https&quot;">​</a></h5><p>将本地的 HTTPS 服务以 HTTP 的形式暴露出去。</p><p><img src="'+f+'" alt="http2https"></p><h5 id="https2http" tabindex="-1">https2http <a class="header-anchor" href="#https2http" aria-label="Permalink to &quot;https2http&quot;">​</a></h5><p>将本地的 HTTP 服务以 HTTPS 的形式暴露出去。</p><p><img src="'+m+'" alt="https2http"></p><h5 id="https2https" tabindex="-1">https2https <a class="header-anchor" href="#https2https" aria-label="Permalink to &quot;https2https&quot;">​</a></h5><p>将本地的 HTTPS 服务以 HTTPS 的形式暴露出去。</p><p><img src="'+C+'" alt="https2https"></p><h2 id="项目实践" tabindex="-1">项目实践 <a class="header-anchor" href="#项目实践" aria-label="Permalink to &quot;项目实践&quot;">​</a></h2><p>本次“那眉岭项目”的公网资源申请自云耀平台和萤石，另外现场的内网服务器技术支持兄弟通过路由的方式，打通内外网两张网卡。</p><h3 id="准备工作" tabindex="-1">准备工作 <a class="header-anchor" href="#准备工作" aria-label="Permalink to &quot;准备工作&quot;">​</a></h3><h4 id="网络前提" tabindex="-1">网络前提 <a class="header-anchor" href="#网络前提" aria-label="Permalink to &quot;网络前提&quot;">​</a></h4><p><img src="'+_+'" alt="项目网络布设图"></p>',146),q=l(`<h4 id="检查服务器版本" tabindex="-1">检查服务器版本 <a class="header-anchor" href="#检查服务器版本" aria-label="Permalink to &quot;检查服务器版本&quot;">​</a></h4><p>查看服务器版本，是为了之后选用相应的frp包做准备；</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@HikvisionOS </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]# uname -r ⏎</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">3.10.0-957.12.2.el7.x86_64</span></span></code></pre></div><h4 id="平台基本信息" tabindex="-1">平台基本信息 <a class="header-anchor" href="#平台基本信息" aria-label="Permalink to &quot;平台基本信息&quot;">​</a></h4><p>在平台服务器上已经安装部署完相应产品，并且保证在内网可以正常访问，本次项目部署的为<strong>综合安防管理平台（iSecure Center）</strong><sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup>。</p><h4 id="安装包" tabindex="-1">安装包 <a class="header-anchor" href="#安装包" aria-label="Permalink to &quot;安装包&quot;">​</a></h4><p>根据相应的服务器版本选定相应的安装包，安装包可以从<a href="https://github.com/fatedier/frp/releases" target="_blank" rel="noreferrer">frp Release</a>下载，其中包名后缀和CPU处理器架构对应关系大致如下：</p><ul><li><strong>_386</strong>：Intel 386指令集处理器</li><li><strong>_amd64</strong>：Intel X86 64位指令集处理器</li><li><strong>_arm64</strong>： ARM架构64位指令集处理器</li><li><strong>_mips64</strong>：MIPS架构64位指令集处理器</li><li><strong>_riscv64</strong>： RISC-V 架构64位指令集处理器</li></ul><p>如linux系统为<code>x86_64</code>构架，则选择<code>amd64</code>后缀的安装包<code>frp_0.44.0_linux_amd64.tar.gz</code>。以<code>0.44.0</code>版本为例详细安装包文件如下：</p><p><img src="`+v+`" alt="安装包信息"></p><h3 id="部署安装" tabindex="-1">部署安装 <a class="header-anchor" href="#部署安装" aria-label="Permalink to &quot;部署安装&quot;">​</a></h3><blockquote><p><strong>注：以下事例是服务端部署为例，客户端步骤基本雷同，只有配置文件有较大差异。</strong></p></blockquote><p>1、上传压缩包至服务器一个心仪的目录位置；</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@HikvisionOS </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">~</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]# cd /usr/local/frp ⏎</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@HikvisionOS frp]# pwd ⏎</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/usr/local/frp</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@HikvisionOS frp]# ll ⏎</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">total</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 23108</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-rw-r--r--</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  9620309</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Nov</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 19</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 14:24</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> frp_0.44.0_linux_amd64.tar.gz</span></span></code></pre></div><p>2、解压上传的压缩包文件；</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@HikvisionOS frp]# tar -zxvf frp_0.44.0_linux_amd64.tar.gz ⏎</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">frp_0.44.0_linux_amd64/</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">frp_0.44.0_linux_amd64/frpc.ini</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">frp_0.44.0_linux_amd64/LICENSE</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">frp_0.44.0_linux_amd64/frpc</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">frp_0.44.0_linux_amd64/frpc_full.ini</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">frp_0.44.0_linux_amd64/frps.ini</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">frp_0.44.0_linux_amd64/frps</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">frp_0.44.0_linux_amd64/frps_full.ini</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@HikvisionOS frp]# ll ⏎</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">total</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 23108</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">drwxr-xr-x</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> opsmgr</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  121</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      119</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Jul</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 11</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 00:19</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> frp_0.44.0_linux_amd64</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-rw-r--r--</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   root</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  9620309</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Nov</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 19</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 14:24</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> frp_0.44.0_linux_amd64.tar.gz</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@HikvisionOS frp]# cp ./frp_0.44.0_linux_amd64/frps ./frp_0.44.0_linux_amd64/frps.ini ./ ⏎</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@HikvisionOS frp]# ll ⏎</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">total</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 23108</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">drwxr-xr-x</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> opsmgr</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  121</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      119</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Jul</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 11</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 00:19</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> frp_0.44.0_linux_amd64</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-rw-r--r--</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   root</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  9620309</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Nov</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 19</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 14:24</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> frp_0.44.0_linux_amd64.tar.gz</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-rwxr-xr-x</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   root</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 14036992</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Nov</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 15</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 14:47</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> frps</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">-rw-r--r--</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> root</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   root</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      637</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Nov</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 15</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 14:47</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> frps.ini</span></span></code></pre></div><p>3、修改服务端配置文件；</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@HikvisionOS frp]# vi frps.ini ⏎</span></span></code></pre></div><p>服务端配置文件事例如下：</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#####frps.ini#####</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[common]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># frp监听的端口，默认是7000，可以改成其他的</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">bind_port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 7000</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 授权码，请改成更复杂的</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">token</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 52010</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 这个token之后在客户端会用到</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># frp管理后台端口，请按自己需求更改</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">dashboard_port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 7500</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># frp管理后台用户名和密码，请改成自己的</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">dashboard_user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = admin</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">dashboard_pwd</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = admin</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">enable_prometheus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = true</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># frp日志配置</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">log_file</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = /var/log/frps.log</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">log_level</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = info</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">log_max_days</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 3</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 代理http/https 访问端口， Envoy upstream end point. http 用于接收http请求， https 用于接收https请求。</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#vhost_http_port = 8000</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#vhost_https_port = 8443</span></span></code></pre></div><p>客户端配置文件事例如下：</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#####frpc.ini#####</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[common]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#服务器ip</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">server_addr</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 10.19.134.79</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#与frps.ini的bind_port一致</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">server_port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 7000</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#与frps.ini的token一致</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">token</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 52010</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[ssh]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = tcp</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local_ip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 10.66.32.164</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local_port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 55555</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">remote_port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 6000</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 配置http服务，可用于小程序开发、远程调试等，如果没有可以不写下面的</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#[web]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#type = http</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#local_ip = 10.66.32.164</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#local_port = 6040</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># web域名</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#custom_domains = 10.19.134.79</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 自定义的远程服务器端口</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">#remote_port = 8000</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[my_cluster_https]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = tcp</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local_ip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 10.66.32.164</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local_port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 443</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">remote_port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 443</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[my_vnsc]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = tcp</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local_ip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 10.66.32.164</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local_port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 8604</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">remote_port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 8604</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[my_mgc]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = tcp</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local_ip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 10.66.32.164</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local_port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 554</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">remote_port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 554</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[my_cluster_http]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = tcp</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local_ip</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 10.66.32.164</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">local_port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 80</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">remote_port</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = 8000</span></span></code></pre></div><p>4、启动服务程序，事例如下：</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@HikvisionOS frp]# nohup ./frps -c ./frps.ini </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> frps.log </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">2&gt;&amp;1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">⏎</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[1] 915170</span></span></code></pre></div><p>5、登录监控页面查看连接：</p><p><a href="http://10.19.134.79:7500/static/#/" target="_blank" rel="noreferrer">http://10.19.134.79:7500/static/#/</a></p><p><img src="`+B+`" alt="image-20221119144753992"></p><p>6、查看服务器程度pid以及停止程序；</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@HikvisionOS frp]# ps -ef</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> frps</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ⏎</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">root</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     915170</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 901456</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 14:42</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pts/0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    00:00:00</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./frps</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./frps.ini</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">root</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     915413</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 901456</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 14:43</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pts/0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    00:00:00</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> grep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --color=auto</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> frps</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@HikvisionOS frp]# kill -9 915170 ⏎</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@HikvisionOS frp]# ps -ef</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">grep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> frps</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ⏎</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">root</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">     915582</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 901456</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 14:43</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pts/0</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    00:00:00</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> grep</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --color=auto</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> frps</span></span></code></pre></div><h3 id="服务注册" tabindex="-1">服务注册 <a class="header-anchor" href="#服务注册" aria-label="Permalink to &quot;服务注册&quot;">​</a></h3><p>1、生成service服务文件；</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@HikvisionOS frp]# cd /usr/lib/systemd/system/ ⏎</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@HikvisionOS system]# vi hik.frps.service ⏎</span></span></code></pre></div><p>服务器配置如下：</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[Unit]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Description</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=Frp Server Service</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">After</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=network.target</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[Service]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=simple</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">User</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=nobody</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">Restart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=on-failure</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">RestartSec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=5s</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">ExecStart</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=/usr/local/frp/frps -c /usr/local/frp/frps.ini</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">[Install]</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">WantedBy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=multi-user.target</span></span></code></pre></div><p>2、配置服务开机自启动；</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@HikvisionOS frp]# systemctl enable hik.frps ⏎</span></span></code></pre></div><p>3、启动服务以及查看服务状态；</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@HikvisionOS frp]# service hik.frps start ⏎</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Redirecting</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /bin/systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hik.frps.service</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@HikvisionOS frp]# service hik.frps status ⏎</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Redirecting</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /bin/systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> status</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hik.frps.service</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">●</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hik.frps.service</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> -</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Frp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Server</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Service</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   Loaded:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> loaded</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (/usr/lib/systemd/system/hik.frps.service; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">enabled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vendor</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> preset:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> disabled</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   Active:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> active</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (running) since Tue 2022-11-15 14:55:06 CST; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">3</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> days</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ago</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Main</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> PID:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 498152</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (frps)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">   CGroup:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /system.slice/hik.frps.service</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">           └─498152</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/frp/frps</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/frp/frps.ini</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Nov</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 15</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 14:55:06</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> HikvisionOS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemd[1]:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Started</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Frp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Server</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Service.</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Nov</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 15</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 14:55:06</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> HikvisionOS</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> frps[498152]:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> logs.BeeLogger.SetLogger:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> open</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /var/log/frps.log:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> permission</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> denied</span></span></code></pre></div><h3 id="平台多线路配置" tabindex="-1">平台多线路配置 <a class="header-anchor" href="#平台多线路配置" aria-label="Permalink to &quot;平台多线路配置&quot;">​</a></h3><p>登录内网平台运管，根据实际项目需要，增加必要的多线路端口映射配置。</p><p><img src="`+D+'" alt="image-20221119151500424"></p><h3 id="穿透效果验证" tabindex="-1">穿透效果验证 <a class="header-anchor" href="#穿透效果验证" aria-label="Permalink to &quot;穿透效果验证&quot;">​</a></h3><p>完成基本的映射关系之后，即可通过外网访问内网服务，本事例以访问运管为例。</p><p><img src="'+A+'" alt="image-20221119151343844"></p><h2 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to &quot;参考资料&quot;">​</a></h2><ul><li><a href="https://github.com/fatedier/frp" target="_blank" rel="noreferrer">fatedier/frp <sup>github</sup></a></li><li><a href="https://blog.csdn.net/weixin_43922901/article/details/109261700" target="_blank" rel="noreferrer">使用frp配置内网访问（穿透）教程（超详细，简单）<sup>csdn</sup></a></li><li><a href="https://www.jianshu.com/p/6be158cc3685" target="_blank" rel="noreferrer">frp搭建与使用详细教程 <sup>简书</sup></a></li><li>内网穿透技术方案应用描述.docx <sup>wiki</sup></li></ul><h2 id="结束语" tabindex="-1">结束语 <a class="header-anchor" href="#结束语" aria-label="Permalink to &quot;结束语&quot;">​</a></h2><p>希望给你带去了一些启发和帮助。<sup class="footnote-ref"><a href="#fn5" id="fnref5">[5]</a></sup></p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p><em>MQTT</em>(消息队列遥测传输)是ISO 标准(ISO/IEC PRF 20922)下基于发布/订阅范式的消息协议。 <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p><em>RTSP</em>（Real Time Streaming Protocol）实时流传输协议，RFC2326（中文版），是TCP/IP协议体系中的一个应用层协议，由哥伦比亚大学、网景和RealNetworks公司提交的IETF RFC标准。 <a href="#fnref2" class="footnote-backref">↩︎</a></p></li><li id="fn3" class="footnote-item"><p><em>Golang</em>（又称 <em>Go</em>）是 Google 的 Robert Griesemer，Rob Pike 及 Ken Thompson 开发的一种静态强类型、编译型语言。 <a href="#fnref3" class="footnote-backref">↩︎</a></p></li><li id="fn4" class="footnote-item"><p>综合安防管理平台，简称iSC，通过接入视频监控、入侵报警、一卡通、停车场、动环等系统的设备，获取边缘节点数据，实现安防信息化集成与联动。以电子地图为载体，融合各系统能力实现丰富的智能应用。该平台适用于全行业通用综合安防业务，对各系统资源进行了整合和集中管理，实现统一部署、统一配置、统一管理和统一调度。 <a href="#fnref4" class="footnote-backref">↩︎</a></p></li><li id="fn5" class="footnote-item"><p>“现在不是去想缺少什么的时候，该想一想凭现有的东西你能做什么。”---created by 袁志鹏 on 十一月 15,2022；last edited by 袁志鹏 on 十一月 23,2022 <a href="#fnref5" class="footnote-backref">↩︎</a></p></li></ol></section>',50);function T(S,w,H,I,R,O){const a=h("font");return k(),e("div",null,[P,i("ul",null,[i("li",null,[s("内网平台服务器 ➕"),i("sub",null,[n(a,{size:"5"},{default:p(()=>[s(" 1")]),_:1})]),s("，前提可以通外网；")]),i("li",null,[s("外网服务器 ➕"),i("sub",null,[n(a,{size:"5"},{default:p(()=>[s(" 1")]),_:1})]),s("，IP地址已经映射至外网IP；")]),i("li",null,[s("外网可访问IP ➕"),i("sub",null,[n(a,{size:"5"},{default:p(()=>[s(" 1")]),_:1})]),s("，以及若干可访问端口；")])]),q])}const U=t(x,[["render",T]]);export{N as __pageData,U as default};
