import{_ as s,c as i,o as a,a4 as n}from"./chunks/framework.uKVmtqZI.js";const l="/assets/image-20230805094217601.B51oMWqU.png",h="/assets/image-20230805111738802.DhCyNaBA.png",p="/assets/image-20230804165818523.8_O-ajxm.png",k="/assets/image-20230804171417916.a14oCeu4.png",t="/assets/image-20230804165705800.CtOZvUxr.png",e="/assets/image-20230805090539055.RVSyjoS8.png",r="/assets/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E4%BF%A1%E6%81%AF.ZO5xtnsE.png",d="/assets/image-20230807182659903.C3tVg9IC.png",F="/assets/image-20230807183341466.CmM6cE5P.png",A=JSON.parse('{"title":"记一次通过JNA调用C++接口的过程","description":"","frontmatter":{},"headers":[],"relativePath":"技术类经验分享/记一次通过JNA调用C++接口的过程.md","filePath":"技术类经验分享/记一次通过JNA调用C++接口的过程.md"}'),g={name:"技术类经验分享/记一次通过JNA调用C++接口的过程.md"},E=n(`<h1 id="记一次通过jna调用c-接口的过程" tabindex="-1">记一次通过JNA调用C++接口的过程 <a class="header-anchor" href="#记一次通过jna调用c-接口的过程" aria-label="Permalink to &quot;记一次通过JNA调用C++接口的过程&quot;">​</a></h1><h2 id="🍬背景简述" tabindex="-1">🍬背景简述 <a class="header-anchor" href="#🍬背景简述" aria-label="Permalink to &quot;🍬背景简述&quot;">​</a></h2><p>某日傍晚六点，突然接到领导委派工作，需要马上给XXX现场项目完成一个什么对接逻辑，然后就被拉进了一个群，转了我几个文件，简单寒暄了几句。哦，原来是一个Java调用C++接口的实现需求。</p><p>虽然是第一次接触Java调用C++接口，但是大概知道需要使用JNA[^ JNA]技术以及哪儿有相应的参考事例。随后通过自己摸索以及同事指导，三下五除二就完成了Demo工程，并且一把调通了接口。就在欣喜地以为可以打完收工的时候，现场测试发现只要传入正式参数，程序运行即奔溃。然后就是协调C++的同事重新编译打包、集成测试，周而复始的搞到深夜，遇到的问题变得越来越多。。。</p><blockquote><p><strong>📣说明：</strong></p><p>下文中提到的工具和工程项目代码放在了**.assets**附件中，感兴趣的可自行获取。</p></blockquote><h2 id="🍒准备工作" tabindex="-1">🍒准备工作 <a class="header-anchor" href="#🍒准备工作" aria-label="Permalink to &quot;🍒准备工作&quot;">​</a></h2><h3 id="服务器环境" tabindex="-1">服务器环境 <a class="header-anchor" href="#服务器环境" aria-label="Permalink to &quot;服务器环境&quot;">​</a></h3><p>首先确认对接程序最终部署的服务器环境，比如是Windows还是Linux，具体的操作系统版本等等。</p><p>本次工程以Linux为例，通过<code>version</code>命令即可查看，比如<code>centos7.8_x86_64</code>这个信息将会影响到之后对接的动态库文件存放路径以及是否匹配等问题。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@HikvisionOS jna]# version ⏎</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">HikOS-B_V2.1.0-webbaseline-centos7.8_x86_64-20211009</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">name</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          License</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  URL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                                            Modified</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  Remark</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">kernel</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        GPLv2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    http://www.kernel.org/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                         NO</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">vim-enhanced</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  Vim</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      http://www.vim.org/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                            NO</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">openssh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       BSD</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      http://www.openssh.com/portable.html</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">           NO</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">openssl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       OpenSSL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  http://www.openssl.org/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                        NO</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sysstat</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       GPLv2+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   http://sebastien.godard.pagesperso-orange.fr/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  NO</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          GPLv3+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   http://www.gnu.org/software/wget/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">              NO</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">lsof</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">          LGPLv2+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">  http://people.freebsd.org/~abe/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                NO</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ntp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">           GPLv2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    http://www.ntp.org</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                             NO</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">unzip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         BSD</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      http://www.info-zip.org/UnZip.html</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">             NO</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">zip</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">           BSD</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      http://www.info-zip.org/Zip.html</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">               NO</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">arp-scan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">      GPLv2+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   http://www.nta-monitor.com/tools/arp-scan/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">     NO</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">psmisc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        GPLv2+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   http://sourceforge.net/projects/psmisc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         NO</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">nload</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">         GPLv2+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   http://www.roland-riegel.de/nload/</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">             NO</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gcc</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">           GPLv3+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   http://gcc.gnu.org</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                             NO</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">gcc-c++</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">       GPLv3+</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   http://gcc.gnu.org</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                             NO</span></span></code></pre></div><h3 id="接口库文件" tabindex="-1">接口库文件 <a class="header-anchor" href="#接口库文件" aria-label="Permalink to &quot;接口库文件&quot;">​</a></h3><p>从动态链接库同事那边拿到动态链接库.so文件，接口头文件和相应三方依赖库文件。</p><p>其中<code>.h</code>头文件用以定义Java接口提供依据；<code>.so</code>文件用于实际生产环境接口的调用；三方依赖库文件用于支撑动态链接库.so得以正常运行，三者缺一不可。</p><p>以本工程为例，文件结构如下：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>linux-x86-64</span></span>
<span class="line"><span>    ├─cvp.h</span></span>
<span class="line"><span>    ├─libCvp_four.so</span></span>
<span class="line"><span>    └─lib</span></span>
<span class="line"><span>       ├─libopencv_core.so</span></span>
<span class="line"><span>       ├─libglog.so.0</span></span>
<span class="line"><span>       ├─libgflags.so.2.2</span></span>
<span class="line"><span>       └─...此处省略N库...</span></span></code></pre></div><p>另外把.h文件单独拿出来看下，对于C的接口有一个大致的概念。（从代码上来说这是一个反例，啥注释也没有，搞飞机~）</p><div class="language-c++ vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">c++</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#ifndef</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CVP_CVP_H</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#define</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CVP_CVP_H</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#endif</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> //CVP_CVP_H</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">#include</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &lt;iostream&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> namespace</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> std</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * ������BALProblem</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">extern</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;C&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{ </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> char*</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  calibration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">controlPoints_imageX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">controlPoints_imageY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ,</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">controlPoints_X</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ,</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">controlPoints_Y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">                       double</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> row</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">parameters</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                                                 </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> char*</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  locate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">locatePoints_imagX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ,</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">locatePoints_imagY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ,</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> row</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">parameters</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">point_reprojected_X</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> *</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">point_reprojected_Y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h2 id="👓项目实战" tabindex="-1">👓项目实战 <a class="header-anchor" href="#👓项目实战" aria-label="Permalink to &quot;👓项目实战&quot;">​</a></h2><h3 id="接口定义" tabindex="-1">接口定义 <a class="header-anchor" href="#接口定义" aria-label="Permalink to &quot;接口定义&quot;">​</a></h3><p>有了C提供的接口文件之后，即可以通过JNA官网的文档（详细参考<a href="http://java-native-access.github.io/jna/5.13.0/javadoc/" target="_blank" rel="noreferrer">JNA API 5.13.0</a><sup> JavaDoc</sup>）编写相应的接口文件，接下来我贴上官网提供的标准数据类型对照表和Demo事例。</p><p><img src="`+l+`" alt="image-20230805094217601"></p><div class="language-pseudocode vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">pseudocode</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>// Original C code</span></span>
<span class="line"><span>extern int printf(const char* fmt, ...);</span></span>
<span class="line"><span></span></span>
<span class="line"><span>// Equivalent JNA mapping</span></span>
<span class="line"><span>interface CLibrary extends Library {</span></span>
<span class="line"><span>    int printf(String fmt, ...);</span></span>
<span class="line"><span>}</span></span></code></pre></div><blockquote><p><strong>📣特殊说明：</strong></p><p>根据实际项目开发经验，整理出如下几种常用的类型对应关系：</p><ul><li><code>void**</code>：表示指向指针的指针类型，JNA中用<code>PointerByReference</code>与之匹配，在获取指针句柄<code>Pointer</code>时候，注意得使用<code>getValue()</code>函数；</li><li><code>void*</code>：一般表示通用指针（或对象句柄），JNA中用<code>Pointer</code>与之匹配；</li><li><code>const TCHAR*</code>：是一个指向常量<code>TCHAR</code>类型数据的指针，<strong>通过使用TCHAR类型，程序能够在不同的编译环境下自动地选择使用ANSI或Unicode字符集（即宽字节与窄字节编码），可以是char或wchar_t等</strong>，JNA中用<code>Pointer</code>与之匹配，可以通过<code>new Memory</code>初始化，但是在set参数时候注意编码方式；</li></ul></blockquote><p>结合上文的.h头文件，本事例的接口文件如下：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * 测试类</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@author</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> yuanzp</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * @date 2023-08-04 13:55</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> CvpFourLibrary</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Library</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	String JNA_LIBRARY_NAME </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Cvp_four&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	NativeLibrary JNA_NATIVE_LIB </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NativeLibrary.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Cvp_fourLibrary.JNA_LIBRARY_NAME);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	Cvp_fourLibrary INSTANCE </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Native.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">loadLibrary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Cvp_fourLibrary.JNA_LIBRARY_NAME, Cvp_fourLibrary.class);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	 * 标定 &lt;br&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	 * Original signature : &lt;code&gt;char* calibration(double*, double*, double*, double*, double, double*)&lt;/code&gt;&lt;br&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	 * &lt;i&gt;native declaration : cvp.h:10&lt;/i&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	 * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> controlPoints_imageX</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 控制点图像X</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	 * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> controlPoints_imageY</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 控制点图像Y</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	 * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> controlPoints_X</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 控制点X</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	 * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> controlPoints_Y</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 控制点Y</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	 * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> row</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 点个数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	 * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> parameters</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> 参数集</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	 * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@return</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	String </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">calibration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(DoubleBuffer </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">controlPoints_imageX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, DoubleBuffer </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">controlPoints_imageY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, DoubleBuffer </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">controlPoints_X</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, DoubleBuffer </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">controlPoints_Y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> row</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, DoubleBuffer </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">parameters</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	 * 位置 &lt;br&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	 * Original signature : &lt;code&gt;char* locate(double*, double*, double, double*, double*, double*)&lt;/code&gt;&lt;br&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	 * &lt;i&gt;native declaration : cvp.h:13&lt;/i&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	 * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> locatePoints_imagX</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	 * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> locatePoints_imagY</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	 * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> row</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	 * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> parameters</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	 * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> point_reprojected_X</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	 * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> point_reprojected_Y</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	 * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@return</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">	 */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	String </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">locate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(DoubleBuffer </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">locatePoints_imagX</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, DoubleBuffer </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">locatePoints_imagY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">double</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> row</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, DoubleBuffer </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">parameters</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, DoubleBuffer </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">point_reprojected_X</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, DoubleBuffer </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">point_reprojected_Y</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="工程搭建" tabindex="-1">工程搭建 <a class="header-anchor" href="#工程搭建" aria-label="Permalink to &quot;工程搭建&quot;">​</a></h3><p>除了手动构建接口的方式，另外根据O同事的指导，还可以通过JNAerator<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>工具快速生成。</p><p>并且此工具还可以直接生成整个mavne工程，所以本文档涉及的工程事例即通过此工具生成，具体使用方法可以参考<a href="https://blog.csdn.net/10km/article/details/79252303" target="_blank" rel="noreferrer">jnaerator:java调用动态库的神器,JNA代码自动生成工具</a><sup>CSDN</sup>。</p><p>我直接贴上本次工程Demo的生成脚本（带注释，实际执行中需要去掉）供大家参考。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@set</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sh_folder=%~dp0</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@pushd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> %sh_folder%</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">java</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -jar</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jnaerator-0.12-shaded.jar</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ^</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	-runtime</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> JNA</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ^</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:指定生成java代码的包名。如果不指定，则默认包名为</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> library</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> name</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	-package</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> per.bj.jna.cvp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ^</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:生成代码路径</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	-o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jna_demo</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">\\c</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">vp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ^</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:生成类型（本文事例Mavne）：</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	::</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   Jar</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> :</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> JAR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 生成jar包,可以使用-jar指定生成的jar包文件名</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	::</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   StandaloneJar</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> :</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 生成包含所有依赖库的jar</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ,可以使用-jar指定生成的jar包文件名</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	::</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   Directory</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> :</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 生成代码到文件夹</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	::</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   Maven</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> :</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 生成maven格式的项目</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pom.xml</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	::</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   AutoGeneratedMaven</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> :</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 生成maven格式的项目</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pom.xml</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">，执行mave</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 自动编译生成jar包，不生成源码</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	-mode</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Maven</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ^</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	-mavenGroupId</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> per.bj.jna</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ^</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	-mavenArtifactId</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cvp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ^</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:生成代码时强制覆盖已经存在的文件</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	-f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ^</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	-skipDeprecated</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ^</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	-DJIMGUTIL_DLL_DECL</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ^</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">	:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:指定要生成代码的动态库和对应头文件，前后顺序无关，可以不提供动态库文件名称，只需要.h文件就可以生成JNA代码</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	-library</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Cvp_four</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ^</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">	cvp.h</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">@popd</span></span></code></pre></div><p>通过JNAerator工具生成mavne工程后，再手动加上依赖库文件，工程结构如下：</p><p><img src="`+h+`" alt="image-20230805111738802"></p><h3 id="部署测试" tabindex="-1">部署测试 <a class="header-anchor" href="#部署测试" aria-label="Permalink to &quot;部署测试&quot;">​</a></h3><p>本工程只演示简单的接口调用逻辑，所以直接把调用写在了main函数中，然后通过<code>mavne package</code>打包，放到服务器上通过jar的方式运行。</p><p>接下来大概罗列下main函数中的逻辑以及服务器上测试的命令脚本。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * Man函数</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> *</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@author</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> yuanzp</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * @date 2023/8/4 10:58</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * @digression I&#39;ll try to do my best with it!</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    private</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> final</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Logger LOG </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Logger.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getLogger</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Main.class.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">());</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    static</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Cvp_fourLibrary instance </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Cvp_fourLibrary.INSTANCE;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    static</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Main main </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> static</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[] </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">args</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        main.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">piu</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * 测试1</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@return</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> biu</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        String locate </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> instance.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">locate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                0d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;instance.locate return：&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> locate);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * 测试2</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@return</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> piu</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        DoubleBuffer parameters </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DoubleBuffer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wrap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        String locate </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> instance.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">calibration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                DoubleBuffer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wrap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[]{</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1906</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1210</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">789</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                DoubleBuffer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wrap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[]{</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">863</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">708</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">226</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">214</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                DoubleBuffer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wrap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[]{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">213.03</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">207.30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">179.17</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">185.70</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                DoubleBuffer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wrap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[]{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">33.16</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">39.03</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16.57</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">11.21</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                4d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                parameters);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;instance.calibration return：&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> locate);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;instance.calibration parameters：&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Arrays.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(parameters.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">array</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * 完整标定测试接口</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@return</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">     */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> locate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        DoubleBuffer parameters </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DoubleBuffer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wrap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        String calibration </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> instance.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">calibration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                DoubleBuffer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wrap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[]{</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1906</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1210</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">789</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                DoubleBuffer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wrap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[]{</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">863</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">708</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">226</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">214</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                DoubleBuffer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wrap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[]{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">213.03</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">207.30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">179.17</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">185.70</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                DoubleBuffer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wrap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[]{</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">33.16</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">39.03</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">16.57</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">11.21</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                4d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                parameters);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;instance.calibration result.body：&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> calibration);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;instance.calibration result.parameters：&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Arrays.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(parameters.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">array</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()));</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;------------------------&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        DoubleBuffer return1 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DoubleBuffer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wrap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        DoubleBuffer return2 </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> DoubleBuffer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wrap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        String locate </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> instance.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">locate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                DoubleBuffer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wrap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[]{</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">9</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1906</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1210</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">789</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                DoubleBuffer.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">wrap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">new</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> double</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[]{</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">863</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">708</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">226</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">214</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}),</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                4d</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                parameters,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                return1,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                return2);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;instance.locate result.body：&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> locate);</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;instance.locate result.point_reprojected_X：&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Arrays.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(return1.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">array</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()));</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;instance.locate result.point_reprojected_Y：&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> +</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Arrays.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">toString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(return2.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">array</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()));</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> void</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> print</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//        LOG.log(Level.INFO,log);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        System.out.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(log);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>执行脚本没有报错，并且打印接口返回结果，即表示C++接口调通了。</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@HikvisionOS jna]# /opt/opsmgr/web/components/openjdk11linux64.1/bin/java -jar /home/hik/jna/cvp-1.0-SNAPSHOT.jar ⏎</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">parameters</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> =</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> input:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">instance.calibration</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> return：success</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">instance.calibration</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> parameters：[6.219686273629357,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -85.47701398252028,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 1559.199123671363,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -0.08732491930462202,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -16.310117092593188,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2845.4011375684154</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                          ,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -0.02676418245558177,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 0.39157885402373477,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 1.0]</span></span></code></pre></div><h2 id="☕️若干问题记录" tabindex="-1">☕️若干问题记录 <a class="header-anchor" href="#☕️若干问题记录" aria-label="Permalink to &quot;☕️若干问题记录&quot;">​</a></h2><h3 id="问题1-报错-native-library-linux-x86-64-xxx-so-not-found-in-resource-path" tabindex="-1">问题1：报错“Native library (linux-x86-64/xxx.so) not found in resource path” <a class="header-anchor" href="#问题1-报错-native-library-linux-x86-64-xxx-so-not-found-in-resource-path" aria-label="Permalink to &quot;问题1：报错“Native library (linux-x86-64/xxx.so) not found in resource path”&quot;">​</a></h3><p>工程启动阶段报错提示接口动态链接库的so找不到。</p><p><img src="`+p+`" alt="image-20230804165818523"></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Exception</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> thread</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;main&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> java.lang.UnsatisfiedLinkError:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Unable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> load</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> library</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;Cvp_four&#39;:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">libCvp_four.so:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cannot</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> open</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> shared</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> object</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> No</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> such</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> or</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> directory</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">libCvp_four.so:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cannot</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> open</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> shared</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> object</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> No</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> such</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> or</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> directory</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Native</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> library</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (linux-x86-64/libCvp_four.so) not found in resource path (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/home/hik/jna/cvp-1.0-SNAPSHOT.jar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        at</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> com.sun.jna.NativeLibrary.loadLibrary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NativeLibrary.java:323</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        at</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> com.sun.jna.NativeLibrary.getInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NativeLibrary.java:483</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        at</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> com.sun.jna.NativeLibrary.getInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NativeLibrary.java:425</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        at</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> per.bj.jna.cvp.library.Cvp_fourLibrary.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">clini</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&gt;(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Cvp_fourLibrary.java:16</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        at</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> per.bj.jna.cvp.Main.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">clini</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&gt;(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Main.java:16</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        Suppressed:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> java.lang.UnsatisfiedLinkError:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libCvp_four.so:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cannot</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> open</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> shared</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> object</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> No</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> such</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> or</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> directory</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                at</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> com.sun.jna.Native.open</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Native</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Method</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                at</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> com.sun.jna.NativeLibrary.loadLibrary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NativeLibrary.java:211</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                ...</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> more</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        Suppressed:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> java.lang.UnsatisfiedLinkError:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libCvp_four.so:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cannot</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> open</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> shared</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> object</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> No</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> such</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> or</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> directory</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                at</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> com.sun.jna.Native.open</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Native</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Method</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                at</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> com.sun.jna.NativeLibrary.loadLibrary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NativeLibrary.java:224</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                ...</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> more</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        Suppressed:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> java.io.IOException:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Native</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> library</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (linux-x86-64/libCvp_four.so) not found in resource path (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/home/hik/jna/cvp-1.0-SNAPSHOT.jar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                at</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> com.sun.jna.Native.extractFromResourcePath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Native.java:1145</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                at</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> com.sun.jna.NativeLibrary.loadLibrary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NativeLibrary.java:295</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                ...</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> more</span></span></code></pre></div><h4 id="错误原因" tabindex="-1">错误原因 <a class="header-anchor" href="#错误原因" aria-label="Permalink to &quot;错误原因&quot;">​</a></h4><p>工程启动时候，JNA会通过<code>Native.loadLibrary(String name, Class&lt;T&gt; interfaceClass)</code>加载动态库，而根据定义的<code>LIBRARY_NAME</code>无法在系统对应的目录下面找到相应的动态链接库so文件。</p><h4 id="解决办法" tabindex="-1">解决办法 <a class="header-anchor" href="#解决办法" aria-label="Permalink to &quot;解决办法&quot;">​</a></h4><p>根据实际操作系统情况，检查动态库.so文件是否在对应的资源文件夹中。本工程为例如图：</p><blockquote><p><strong>📣说明：</strong></p><p>新体系组件.so库文件需要放置在config目录下面。另外记得打包时候在assembly中包含linux-x86-64目录及文件。</p></blockquote><p><img src="`+k+'" alt="image-20230804171417916"></p><h3 id="问题2-启动报错提示信息动态库-so的名字前面多了一个lib单词" tabindex="-1">问题2：启动报错提示信息动态库.so的名字前面多了一个lib单词 <a class="header-anchor" href="#问题2-启动报错提示信息动态库-so的名字前面多了一个lib单词" aria-label="Permalink to &quot;问题2：启动报错提示信息动态库.so的名字前面多了一个lib单词&quot;">​</a></h3><p>工程启动阶段报错提示接口动态库的.so找不到，错误提示中发现提示的so文件名字和实际的动态库.so比较多了一个<code>lib</code>。</p><p><img src="'+t+`" alt="image-20230804165705800"></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Exception</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> thread</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;main&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> java.lang.UnsatisfiedLinkError:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Unable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> to</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> load</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> library</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;libCvp_four&#39;:</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">liblibCvp_four.so:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cannot</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> open</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> shared</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> object</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> No</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> such</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> or</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> directory</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">liblibCvp_four.so:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cannot</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> open</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> shared</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> object</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> No</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> such</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> or</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> directory</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Native</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> library</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (linux-x86-64/liblibCvp_four.so) not found in resource path (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/home/hik/jna/cvp-1.0-SNAPSHOT.jar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        at</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> com.sun.jna.NativeLibrary.loadLibrary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NativeLibrary.java:323</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        at</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> com.sun.jna.NativeLibrary.getInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NativeLibrary.java:483</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        at</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> com.sun.jna.NativeLibrary.getInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NativeLibrary.java:425</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        at</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> per.bj.jna.cvp.library.Cvp_fourLibrary.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">clini</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&gt;(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Cvp_fourLibrary.java:16</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        at</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> per.bj.jna.cvp.Main.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">clini</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&gt;(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Main.java:20</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        Suppressed:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> java.lang.UnsatisfiedLinkError:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> liblibCvp_four.so:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cannot</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> open</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> shared</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> object</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> No</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> such</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> or</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> directory</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                at</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> com.sun.jna.Native.open</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Native</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Method</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                at</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> com.sun.jna.NativeLibrary.loadLibrary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NativeLibrary.java:211</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                ...</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> more</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        Suppressed:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> java.lang.UnsatisfiedLinkError:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> liblibCvp_four.so:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cannot</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> open</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> shared</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> object</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> No</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> such</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> or</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> directory</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                at</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> com.sun.jna.Native.open</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Native</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Method</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                at</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> com.sun.jna.NativeLibrary.loadLibrary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NativeLibrary.java:224</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                ...</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> more</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        Suppressed:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> java.io.IOException:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Native</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> library</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (linux-x86-64/liblibCvp_four.so) not found in resource path (</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">/home/hik/jna/cvp-1.0-SNAPSHOT.jar</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                at</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> com.sun.jna.Native.extractFromResourcePath</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Native.java:1145</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">                at</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> com.sun.jna.NativeLibrary.loadLibrary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NativeLibrary.java:295</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">                ...</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 4</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> more</span></span></code></pre></div><h4 id="错误原因-1" tabindex="-1">错误原因 <a class="header-anchor" href="#错误原因-1" aria-label="Permalink to &quot;错误原因&quot;">​</a></h4><p>libName的值是.so文件的完整文件名，例如本文中的so对应的libName是libCvp_four.so。但是Library中对应的<code>JNA_LIBRARY_NAME</code>是Cvp_four，而不是libCvp_four。</p><h4 id="解决办法-1" tabindex="-1">解决办法 <a class="header-anchor" href="#解决办法-1" aria-label="Permalink to &quot;解决办法&quot;">​</a></h4><p>将Library接口中的<code>JNA_LIBRARY_NAME</code>修改为不带lib前缀，当然实际问题实际分析，这只是举个栗子而已。</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> interface</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Cvp_fourLibrary</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Library</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	String JNA_LIBRARY_NAME </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Cvp_four&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	NativeLibrary JNA_NATIVE_LIB </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NativeLibrary.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Cvp_fourLibrary.JNA_LIBRARY_NAME);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	Cvp_fourLibrary INSTANCE </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Native.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">loadLibrary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Cvp_fourLibrary.JNA_LIBRARY_NAME, Cvp_fourLibrary.class);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">。。。此处省略业务接口代码。。。</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="问题3-报错-java-lang-unsatisfiedlinkerror-xxx-cannot-open-shared-object-file-no-such-file-or-directory" tabindex="-1">问题3：报错“java.lang.UnsatisfiedLinkError: xxx: cannot open shared object file: No such file or directory” <a class="header-anchor" href="#问题3-报错-java-lang-unsatisfiedlinkerror-xxx-cannot-open-shared-object-file-no-such-file-or-directory" aria-label="Permalink to &quot;问题3：报错“java.lang.UnsatisfiedLinkError: xxx: cannot open shared object file: No such file or directory”&quot;">​</a></h3><p><img src="`+e+`" alt="image-20230805090539055"></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Exception</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> in</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> thread</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;main&quot;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> java.lang.UnsatisfiedLinkError:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> libopencv_stitching.so.3.2:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cannot</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> open</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> shared</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> object</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> No</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> such</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> file</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> or</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> directory</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        at</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> com.sun.jna.Native.open</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Native</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Method</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        at</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> com.sun.jna.NativeLibrary.loadLibrary</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NativeLibrary.java:298</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        at</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> com.sun.jna.NativeLibrary.getInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NativeLibrary.java:483</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        at</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> com.sun.jna.NativeLibrary.getInstance</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">NativeLibrary.java:425</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        at</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> per.bj.jna.cvp.library.Cvp_fourLibrary.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">clini</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&gt;(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Cvp_fourLibrary.java:16</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        at</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> per.bj.jna.cvp.Main.</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">clini</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">t</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&gt;(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Main.java:18</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)</span></span></code></pre></div><h4 id="错误原因-2" tabindex="-1">错误原因 <a class="header-anchor" href="#错误原因-2" aria-label="Permalink to &quot;错误原因&quot;">​</a></h4><p>动态链接库本身会依赖很多其他的三方库文件，如果没有建立好依赖关系，则会导致缺失依赖库。</p><h4 id="解决办法-2" tabindex="-1">解决办法 <a class="header-anchor" href="#解决办法-2" aria-label="Permalink to &quot;解决办法&quot;">​</a></h4><p>参考“<a href="#执行函数动态链接.so共享库设置">执行函数动态链接.so共享库设置</a>”章节，设置对应的<code>LD_LIBRARY_PATH</code>变量。</p><h3 id="问题4-调用句柄对象入参类函数-程序直接崩溃或者返回错误提示句柄无效" tabindex="-1">问题4：调用句柄对象入参类函数，程序直接崩溃或者返回错误提示句柄无效 <a class="header-anchor" href="#问题4-调用句柄对象入参类函数-程序直接崩溃或者返回错误提示句柄无效" aria-label="Permalink to &quot;问题4：调用句柄对象入参类函数，程序直接崩溃或者返回错误提示句柄无效&quot;">​</a></h3><h4 id="错误原因-3" tabindex="-1">错误原因 <a class="header-anchor" href="#错误原因-3" aria-label="Permalink to &quot;错误原因&quot;">​</a></h4><p>通过<code>PointerByReference</code>对象初始化句柄对象，而<code>PointerByReference</code>有两个获取<code>Pointer</code>的函数：<code>getValue()</code>和<code>getPointer()</code>。两者存在如下差异：</p><ul><li><code>getValue()</code>方法返回指向存储在 <code>PointerByReference</code>中的指针值的引用，并用于从指针中获取数据或者与其他指针进行比较和操作。</li><li><code>getPointer()</code>方法返回指向本身的指针，并用于将Java对象的引用作为参数传递给C或C++中的函数，该函数需要指向指针的指针作为参数。</li></ul><p>所以使用<code>getPointer()</code>函数获取到的是<code>PointerByReference</code> 实例本身的指针，而非句柄对象。</p><h4 id="解决办法-3" tabindex="-1">解决办法 <a class="header-anchor" href="#解决办法-3" aria-label="Permalink to &quot;解决办法&quot;">​</a></h4><p>尝试通过<code>getValue()</code>函数获取<code>Pointer</code>对象，即对象句柄。</p><h3 id="问题5-调用-const-tchar-字符串类型入参接口-一直提示参数无效" tabindex="-1">问题5：调用&quot;const TCHAR*&quot;字符串类型入参接口，一直提示参数无效 <a class="header-anchor" href="#问题5-调用-const-tchar-字符串类型入参接口-一直提示参数无效" aria-label="Permalink to &quot;问题5：调用&quot;const TCHAR*&quot;字符串类型入参接口，一直提示参数无效&quot;">​</a></h3><h4 id="错误原因-4" tabindex="-1">错误原因 <a class="header-anchor" href="#错误原因-4" aria-label="Permalink to &quot;错误原因&quot;">​</a></h4><p>通过<code>Pointer</code>对象初始化字符串时候，未正确指定宽/窄字节编码（ANSI或Unicode字符集）和字符串编码方式。</p><h4 id="解决办法-4" tabindex="-1">解决办法 <a class="header-anchor" href="#解决办法-4" aria-label="Permalink to &quot;解决办法&quot;">​</a></h4><p>根据实际动态库的打包字符集和编码方式选择正确的初始化方式。</p><p>ANSI字符集和GBK编码的事例代码如下：</p><div class="language-java vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">java</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * 构建字符串指针Pointer，Ansi编码方式下用窄字节编码</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;"> str</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@return</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">private</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Pointer </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">createPointer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(String str) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    Pointer p </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Memory</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">((str.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getBytes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">().length </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">+</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">));</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 宽字节编码：p.setWideString(0, str);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    p.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, str, CharsetUtil.GBK);</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> p;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="🍗知识拓展" tabindex="-1">🍗知识拓展 <a class="header-anchor" href="#🍗知识拓展" aria-label="Permalink to &quot;🍗知识拓展&quot;">​</a></h2><h3 id="jna动态链接库文件存放目录问题" tabindex="-1">JNA动态链接库文件存放目录问题 <a class="header-anchor" href="#jna动态链接库文件存放目录问题" aria-label="Permalink to &quot;JNA动态链接库文件存放目录问题&quot;">​</a></h3><p>JNA针对不同的操作系统，会有相应的默认动态链接库文件夹，比如Windows 64位系统的目录是<code>win32-x86-64</code>,Linux ARM系统的目录是<code>linux-arm</code>，以此类推。</p><p>另外动态链接库文件夹需要放到工程的<code>resources</code>资源目录下面。</p><p><img src="`+r+'" alt="操作系统信息"></p><h3 id="执行函数动态链接-so共享库设置" tabindex="-1">执行函数动态链接.so共享库设置 <a class="header-anchor" href="#执行函数动态链接-so共享库设置" aria-label="Permalink to &quot;执行函数动态链接.so共享库设置&quot;">​</a></h3><p>当执行函数动态链接.so时，如果此文件依赖不在缺省目录下<code>/usr/local/lib</code>和 <code>/usr/lib</code>，那么执行就会提示缺少依赖库，而我们可以通过<code>ldd</code>命令查看动态库依赖的包的详细信息。</p><p><img src="'+d+`" alt="image-20230807182659903"></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@HikvisionOS jna]# ldd libCvp_four.so ⏎</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ldd:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> warning:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> you</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> do</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> not</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> have</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> execution</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> permission</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./libCvp_four.so&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        linux-vdso.so.1 =&gt;  (0x00007ffd2b9d0000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_stitching.so.3.2 =&gt; not found</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_superres.so.3.2 =&gt; not found</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_videostab.so.3.2 =&gt; not found</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_aruco.so.3.2 =&gt; not found</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_bgsegm.so.3.2 =&gt; not found</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_bioinspired.so.3.2 =&gt; not found</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_ccalib.so.3.2 =&gt; not found</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_dpm.so.3.2 =&gt; not found</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_fuzzy.so.3.2 =&gt; not found</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_line_descriptor.so.3.2 =&gt; not found</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_optflow.so.3.2 =&gt; not found</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_reg.so.3.2 =&gt; not found</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_saliency.so.3.2 =&gt; not found</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_sfm.so.3.2 =&gt; not found</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_stereo.so.3.2 =&gt; not found</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_structured_light.so.3.2 =&gt; not found</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_surface_matching.so.3.2 =&gt; not found</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_tracking.so.3.2 =&gt; not found</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_xfeatures2d.so.3.2 =&gt; not found</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_ximgproc.so.3.2 =&gt; not found</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_xobjdetect.so.3.2 =&gt; not found</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_xphoto.so.3.2 =&gt; not found</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_shape.so.3.2 =&gt; not found</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_phase_unwrapping.so.3.2 =&gt; not found</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_rgbd.so.3.2 =&gt; not found</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_calib3d.so.3.2 =&gt; not found</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_video.so.3.2 =&gt; not found</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_datasets.so.3.2 =&gt; not found</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_dnn.so.3.2 =&gt; not found</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_face.so.3.2 =&gt; not found</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_plot.so.3.2 =&gt; not found</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_text.so.3.2 =&gt; not found</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_features2d.so.3.2 =&gt; not found</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_flann.so.3.2 =&gt; not found</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_objdetect.so.3.2 =&gt; not found</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_ml.so.3.2 =&gt; not found</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_highgui.so.3.2 =&gt; not found</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_photo.so.3.2 =&gt; not found</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_videoio.so.3.2 =&gt; not found</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_imgcodecs.so.3.2 =&gt; not found</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_imgproc.so.3.2 =&gt; not found</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_core.so.3.2 =&gt; not found</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libstdc++.so.6 =&gt; /lib64/libstdc++.so.6 (0x00007f5ae1cdb000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libm.so.6 =&gt; /lib64/libm.so.6 (0x00007f5ae19d9000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libgcc_s.so.1 =&gt; /lib64/libgcc_s.so.1 (0x00007f5ae17c3000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libc.so.6 =&gt; /lib64/libc.so.6 (0x00007f5ae13f5000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        /lib64/ld-linux-x86-64.so.2 (0x00007f5ae21f1000)</span></span></code></pre></div><p>可以参考<a href="https://blog.csdn.net/gaotihong/article/details/102611443" target="_blank" rel="noreferrer">export LD_LIBRARY_PATH 的使用</a><sup>CSDN</sup>指定环境变量<strong>LD_LIBRARY_PATH</strong>方式解决。总体思路就是在已有的环境变量上添加新的路径名。</p><p>本工程命令行模板及事例如下：<code>export LD_LIBRARY_PATH=newDirs:$LD_LIBRARY_PATH</code>（newDirs是新的路径串）。</p><blockquote><p><strong>📣说明：</strong></p><p>集成到新体系组件中，需要将<code>export</code>命令添加到<code>__service</code>文件中，位置在工程启动命令前面即可。</p></blockquote><p><img src="`+F+`" alt="image-20230807183341466"></p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@HikvisionOS jna]# </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> LD_LIBRARY_PATH</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/usr/local/lib/cvp/:</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$LD_LIBRARY_PATH ⏎</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[root@HikvisionOS jna]# ldd libCvp_four.so ⏎</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ldd:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> warning:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> you</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> do</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> not</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> have</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> execution</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> permission</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> for</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> \`</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./libCvp_four.so&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        linux-vdso.so.1 =&gt;  (0x00007ffc59ed4000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_stitching.so.3.2 =&gt; /usr/local/lib/cvp/libopencv_stitching.so.3.2 (0x00007fcfd2d44000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_superres.so.3.2 =&gt; /usr/local/lib/cvp/libopencv_superres.so.3.2 (0x00007fcfd2b18000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_videostab.so.3.2 =&gt; /usr/local/lib/cvp/libopencv_videostab.so.3.2 (0x00007fcfd28c3000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_aruco.so.3.2 =&gt; /usr/local/lib/cvp/libopencv_aruco.so.3.2 (0x00007fcfd2671000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_bgsegm.so.3.2 =&gt; /usr/local/lib/cvp/libopencv_bgsegm.so.3.2 (0x00007fcfd2462000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_bioinspired.so.3.2 =&gt; /usr/local/lib/cvp/libopencv_bioinspired.so.3.2 (0x00007fcfd222d000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_ccalib.so.3.2 =&gt; /usr/local/lib/cvp/libopencv_ccalib.so.3.2 (0x00007fcfd1fb7000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_dpm.so.3.2 =&gt; /usr/local/lib/cvp/libopencv_dpm.so.3.2 (0x00007fcfd1d93000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_fuzzy.so.3.2 =&gt; /usr/local/lib/cvp/libopencv_fuzzy.so.3.2 (0x00007fcfd1a67000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_line_descriptor.so.3.2 =&gt; /usr/local/lib/cvp/libopencv_line_descriptor.so.3.2 (0x00007fcfd1835000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_optflow.so.3.2 =&gt; /usr/local/lib/cvp/libopencv_optflow.so.3.2 (0x00007fcfd15d6000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_reg.so.3.2 =&gt; /usr/local/lib/cvp/libopencv_reg.so.3.2 (0x00007fcfd1293000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_saliency.so.3.2 =&gt; /usr/local/lib/cvp/libopencv_saliency.so.3.2 (0x00007fcfd1061000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_sfm.so.3.2 =&gt; /usr/local/lib/cvp/libopencv_sfm.so.3.2 (0x00007fcfd0b0f000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_stereo.so.3.2 =&gt; /usr/local/lib/cvp/libopencv_stereo.so.3.2 (0x00007fcfd08e9000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_structured_light.so.3.2 =&gt; /usr/local/lib/cvp/libopencv_structured_light.so.3.2 (0x00007fcfd06cb000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_surface_matching.so.3.2 =&gt; /usr/local/lib/cvp/libopencv_surface_matching.so.3.2 (0x00007fcfd047f000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_tracking.so.3.2 =&gt; /usr/local/lib/cvp/libopencv_tracking.so.3.2 (0x00007fcfcff35000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_xfeatures2d.so.3.2 =&gt; /usr/local/lib/cvp/libopencv_xfeatures2d.so.3.2 (0x00007fcfcfa80000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_ximgproc.so.3.2 =&gt; /usr/local/lib/cvp/libopencv_ximgproc.so.3.2 (0x00007fcfcf66a000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_xobjdetect.so.3.2 =&gt; /usr/local/lib/cvp/libopencv_xobjdetect.so.3.2 (0x00007fcfcf451000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_xphoto.so.3.2 =&gt; /usr/local/lib/cvp/libopencv_xphoto.so.3.2 (0x00007fcfcf1da000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_shape.so.3.2 =&gt; /usr/local/lib/cvp/libopencv_shape.so.3.2 (0x00007fcfcefa2000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_phase_unwrapping.so.3.2 =&gt; /usr/local/lib/cvp/libopencv_phase_unwrapping.so.3.2 (0x00007fcfced97000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_rgbd.so.3.2 =&gt; /usr/local/lib/cvp/libopencv_rgbd.so.3.2 (0x00007fcfceb04000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_calib3d.so.3.2 =&gt; /usr/local/lib/cvp/libopencv_calib3d.so.3.2 (0x00007fcfce76b000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_video.so.3.2 =&gt; /usr/local/lib/cvp/libopencv_video.so.3.2 (0x00007fcfce3e2000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_datasets.so.3.2 =&gt; /usr/local/lib/cvp/libopencv_datasets.so.3.2 (0x00007fcfce159000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_dnn.so.3.2 =&gt; /usr/local/lib/cvp/libopencv_dnn.so.3.2 (0x00007fcfcdb61000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_face.so.3.2 =&gt; /usr/local/lib/cvp/libopencv_face.so.3.2 (0x00007fcfcd932000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_plot.so.3.2 =&gt; /usr/local/lib/cvp/libopencv_plot.so.3.2 (0x00007fcfcd727000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_text.so.3.2 =&gt; /usr/local/lib/cvp/libopencv_text.so.3.2 (0x00007fcfcd403000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_features2d.so.3.2 =&gt; /usr/local/lib/cvp/libopencv_features2d.so.3.2 (0x00007fcfcd12f000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_flann.so.3.2 =&gt; /usr/local/lib/cvp/libopencv_flann.so.3.2 (0x00007fcfcced3000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_objdetect.so.3.2 =&gt; /usr/local/lib/cvp/libopencv_objdetect.so.3.2 (0x00007fcfccc67000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_ml.so.3.2 =&gt; /usr/local/lib/cvp/libopencv_ml.so.3.2 (0x00007fcfcc9a2000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_highgui.so.3.2 =&gt; /usr/local/lib/cvp/libopencv_highgui.so.3.2 (0x00007fcfcc79c000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_photo.so.3.2 =&gt; /usr/local/lib/cvp/libopencv_photo.so.3.2 (0x00007fcfcc3a2000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_videoio.so.3.2 =&gt; /usr/local/lib/cvp/libopencv_videoio.so.3.2 (0x00007fcfcc17a000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_imgcodecs.so.3.2 =&gt; /usr/local/lib/cvp/libopencv_imgcodecs.so.3.2 (0x00007fcfcbba6000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_imgproc.so.3.2 =&gt; /usr/local/lib/cvp/libopencv_imgproc.so.3.2 (0x00007fcfca372000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libopencv_core.so.3.2 =&gt; /usr/local/lib/cvp/libopencv_core.so.3.2 (0x00007fcfc9611000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libstdc++.so.6 =&gt; /usr/local/lib/cvp/libstdc++.so.6 (0x00007fcfc930a000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libm.so.6 =&gt; /lib64/libm.so.6 (0x00007fcfc9008000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libgcc_s.so.1 =&gt; /lib64/libgcc_s.so.1 (0x00007fcfc8df2000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libc.so.6 =&gt; /lib64/libc.so.6 (0x00007fcfc8a24000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libdl.so.2 =&gt; /lib64/libdl.so.2 (0x00007fcfc8820000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libpthread.so.0 =&gt; /lib64/libpthread.so.0 (0x00007fcfc8604000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        librt.so.1 =&gt; /lib64/librt.so.1 (0x00007fcfc83fc000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libglog.so.1 =&gt; /usr/local/lib/cvp/libglog.so.1 (0x00007fcfc81be000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libgflags.so.2.2 =&gt; /usr/local/lib/cvp/libgflags.so.2.2 (0x00007fcfc7f9e000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libgomp.so.1 =&gt; /lib64/libgomp.so.1 (0x00007fcfc7d78000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        /lib64/ld-linux-x86-64.so.2 (0x00007fcfd31d9000)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">        libz.so.1 =&gt; /lib64/libz.so.1 (0x00007fcfc7b62000)</span></span></code></pre></div><h2 id="🍔参考资料" tabindex="-1">🍔参考资料 <a class="header-anchor" href="#🍔参考资料" aria-label="Permalink to &quot;🍔参考资料&quot;">​</a></h2><p><a href="https://github.com/java-native-access/jna" target="_blank" rel="noreferrer">java-native-access/jna</a><sup>GitHub</sup></p><p><a href="http://java-native-access.github.io/jna/5.13.0/javadoc/" target="_blank" rel="noreferrer">JNA API 5.13.0</a><sup> JavaDoc</sup></p><p><a href="https://blog.csdn.net/10km/article/details/79252303" target="_blank" rel="noreferrer">jnaerator:java调用动态库的神器,JNA代码自动生成工具</a><sup>CSDN</sup></p><p><a href="https://blog.csdn.net/gaotihong/article/details/102611443" target="_blank" rel="noreferrer">export LD_LIBRARY_PATH 的使用</a><sup>CSDN</sup></p><p>JNA方式对接研究院算法小结.docx<sup>Word</sup></p><p><a href="https://wiki.hikvision.com.cn/pages/viewpage.action?pageId=192251154" target="_blank" rel="noreferrer">JAVA使用JNA调用C++依赖库</a><sup>Wiki</sup></p><h2 id="🍭特别感谢" tabindex="-1">🍭特别感谢 <a class="header-anchor" href="#🍭特别感谢" aria-label="Permalink to &quot;🍭特别感谢&quot;">​</a></h2><p>这块工作最后能够在短时间内得以完成，离不开身边同事提供的重要帮助，我这个当事人反而是最不重要的一个环节，所以特此章节以表感谢。</p><ul><li>特别感谢<strong>欧阳工（欧阳乐）</strong>，分享给我一些他使用JNA的经验以及手把手教我怎么通过JNAerator生成接口，让我能够短时间内上手开发；</li><li>特别感谢<strong>张工（张灿锋）</strong>，在我面对依赖库缺失问题一筹莫展的时候，指导我如何设置<code>LD_LIBRARY_PATH</code>参数，让后续的对接过程变得豁然开朗；</li><li>感谢<strong>吴工（吴杰25）<strong>和</strong>王工（王利范6）</strong>，在接口测试联调过程中，态度积极且认真。</li></ul><h2 id="🍸结束语" tabindex="-1">🍸结束语 <a class="header-anchor" href="#🍸结束语" aria-label="Permalink to &quot;🍸结束语&quot;">​</a></h2><p>“过程是曲折的，结果是欣慰的”，最后有惊无险的完成了这份“临时工”的工作。也因为过程并非一番风顺，反而让我学习了不一样的知识，并感受到不一样的“乐趣”。</p><p>当然上文中的这个“过程”有造假嫌疑，是我在完成实际工作几天后重新找服务器，搭建工程还原并记录下来的。“真真假假，假假真真，真亦假时假亦真”，谁又看得清呢？不好意思，跑题了。不过本文的初心是：希望给看到这篇分享的你带去一些启发和帮助，这肯定是真的。</p><p>最后的最后，祝你好运，盆友~<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></p><p>[^ JNA]: JNA（Java Native Access ）提供一组Java工具类用于在运行期间动态访问系统本地库（native library：如Window的dll）而不需要编写任何Native/JNI代码。</p><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p>JNAerator 是一个封装了 Java 本地接口 JNI 的项目，通过解析 C /Objective-C 的 .h 头文件并生成对应的 Java 接口以方便调用。 <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p>“相信你自己，了解你自己，否定你自己，做个谦卑的人。 ”---created by 袁志鹏 on 八月 5,2023；last edited by 袁志鹏 on 十二月 27,2023 <a href="#fnref2" class="footnote-backref">↩︎</a></p></li></ol></section>`,110),o=[E];function y(c,C,B,b,u,v){return a(),i("div",null,o)}const D=s(g,[["render",y]]);export{A as __pageData,D as default};
